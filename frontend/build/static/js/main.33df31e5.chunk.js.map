{"version":3,"sources":["utilities/authUtilities.js","components/Header.jsx","components/Footer.jsx","components/ProtectedUserRoute.jsx","components/ProtectedAdminRoute.jsx","components/BookmarkedRecipesCarousel.jsx","components/HomeScreenUserNavigation.jsx","components/HomeScreenAdminNavigation.jsx","utilities/localDateTimeFormatter.js","components/HighPriorityTasks.jsx","screens/HomeScreen.jsx","components/FormContainer.jsx","screens/LoginScreen.jsx","screens/RegisterScreen.jsx","components/RecipeComponent.jsx","screens/RecipesScreen.jsx","components/SingleRecipeComponent.jsx","screens/RecipeScreen.jsx","components/RotaDayCardComponent.jsx","components/RotaDisplayComponentCards.jsx","screens/RotaScreen.jsx","screens/PantryScreen.jsx","utilities/stylingUtilities.js","screens/TasksScreen.jsx","screens/ActivateAccountScreen.jsx","screens/ProfileScreen.jsx","screens/AdminScreen.jsx","screens/AdminUsersScreen.jsx","components/RotaCreatorComponentTwo.jsx","components/AllRotasTableComponent.jsx","screens/AdminRotaCreatorScreen.jsx","components/AllRecipesTableComponent.jsx","components/RecipeCreatorComponentThree.jsx","components/EdamamRecipesComponent.jsx","screens/AdminRecipeCreatorScreen.jsx","components/RotaEditComponent.jsx","screens/AdminRotaEditScreen.jsx","App.js","index.js"],"names":["getCookie","key","undefined","window","cookie","get","authenticate","response","next","value","data","token","set","expires","localStorage","setItem","JSON","stringify","setLocalStorage","user","isAuth","getItem","parse","logout","remove","removeItem","removeLocalStorage","withRouter","history","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Image","height","className","src","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","name","role","Item","onClick","push","Footer","Row","Col","Date","getFullYear","ProtectedUserRoute","Component","component","rest","render","props","pathname","state","from","location","ProtectedAdminRoute","BookmarkedRecipesCarousel","recipes","Carousel","pause","map","recipe","_id","image","alt","label","fluid","Caption","healthLabels","i","Badge","activeKey","class","style","textShadow","localDate","date","toLocaleDateString","day","month","year","localTime","time","toLocaleTimeString","hour","minute","HighPriorityTasks","tasks","task","Alert","Heading","taskName","assignedTo","createdAt","HomeScreen","split","useState","bookmarkedRecipes","setBookmarkedRecipes","highPriorityTasks","setHighPriorityTasks","fetchBookmarkedRecipes","a","axios","process","fetchHighPriorityTasks","useEffect","length","FormContainer","children","xs","md","LoginScreen","email","password","buttonText","formData","setFormData","handleInputChange","event","console","log","target","Form","onSubmit","preventDefault","method","url","then","toast","success","catch","error","Group","controlId","Label","Control","type","placeholder","onChange","Button","RegisterScreen","confirmPassword","message","RecipeComponent","Card","Img","Body","Title","Text","ListGroup","ingredients","ingr","text","RecipesScreen","setRecipes","fetchRecipes","searchInput","setSearchInput","filteredRecipes","setFilteredRecipes","InputGroup","Prepend","FormControl","aria-label","aria-describedby","e","storedRecipes","filter","toLowerCase","match","index","sm","lg","xl","SingleRecipeComponent","path","startsWith","flush","ing","productId","weight","countInStock","RecipeScreen","setRecipe","isFetching","setIsFetching","useParams","fetchRecipe","Spinner","animation","RotaDayCardComponent","employees","dayOfTheWeek","dateFormatted","employeesArr","border","dayId","Header","substring","emp","nameId","start","finish","RotaDisplayComponentCards","setEmployees","rota","setRota","isFetchingEmployees","setIsFetchingEmployees","isFetchingRota","setIsFetchingRota","getEmployees","getRota","week","Fragment","weekStart","weeklyRota","RotaScreen","PantryScreen","products","setProducts","modalData","setModalData","modalDataAdd","setModalDataAdd","modalDataSubt","setModalDataSubt","show","setShow","showRemove","setShowRemove","submitAdd","setSubmitAdd","setSubmitRemove","handleClose","handleCloseRemove","handleShow","find","product","handleShowRemove","fetchProducts","getCurrentProducts","currentPage","productsPerPage","setCurrentProductState","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","filteredProducts","setFilteredProducts","pantryProducts","prod","Table","striped","bordered","hover","size","Modal","onHide","closeButton","readOnly","as","Number","setPriorityColour","priority","colour","TasksScreen","setTasks","users","setUsers","isCompleted","setIsCompleted","showEditModal","setShowEditModal","setTaskPriority","isTaskUpdated","setIsTaskUpdated","handleCloseEditModal","handleTaskCompleted","completed","headers","Authorization","fetchTasks","fetchUsers","inline","disabled","selected","ActivateAccountScreen","params","jwt","decode","setTimeout","ProfileScreen","setIsFetchingUser","config","fetchUser","auth","updateUserLocalStorage","AdminScreen","taskFormData","setTaskFormData","price","defaultWeightInGrams","productsFormData","setProductsFormData","setIsFetchingProducts","handleProductInputChange","required","step","handleTaskInputChange","AdminUsersScreen","isFetchingUsers","setIsFetchingUsers","showRemoveModal","setShowRemoveModal","submitRemove","submitEditRole","setSubmitEditRole","handleCloseRemoveModal","handleEditRoleChange","responsive","href","Check","checked","moment","locale","RotaCreatorComponent","setNewRotaAdded","setWeek","newWeeklyRota","setNewWeeklyRota","rotaIsReady","setRotaIsReady","handleResetWeek","handleChangeEmployees","idx","newRota","weekStartingDate","weekDays","newWeek","add","format","block","defaultValue","pattern","Feedback","handleAddEmployee","empIndex","splice","handleRemoveEmployee","AllRotasTableComponent","rotas","handleShowRemoveModal","AdminRotaCreatorScreen","setRotas","isFetchingRotas","setIsFetchingRotas","fetchRotas","setNewRottaAdded","AllRecipesTableComponent","handleClickUpdate","handleClickBookmark","bookmarked","RecipeCreatorComponent","handleRecipeSubmit","handleRecipeCreatorInputChange","recipeCreatorData","handleChangeProductNew","handleAddIngredientNew","uploading","uploadFileHandler","handleIngredientLineChangeNew","recipeLines","handleRemoveIngredient","handlePhotoInputChange","photoInput","previewSource","selectedPhoto","deleteRecipePhoto","isUpdatingRecipe","handleRecipeUpdateSubmit","getProductName","ingredientLines","backgroundColor","File","custom","thumbnail","width","pill","line","EdamamRecipesComponent","edamamRecipes","AdminRecipeCreatorScreen","isFetchingRecipes","setIsFetchingRecipes","setNewRecipeAdded","isFetchingProducts","bookmarkUpdated","setBookmarkUpdated","setRecipeCreatorData","setRecipeLines","setUploading","file","files","FormData","append","post","setPreviewSource","previewPhoto","photo","reader","FileReader","readAsDataURL","onloadend","result","uploadRecipePhoto","base64EncodedImage","fetch","body","json","msg","imgData","secure_url","includes","public_id","Accept","setIsUpdatingRecipe","setRecipeToUpdateData","recipeIdToUpdate","setRecipeIdToUpdate","fetchRecipeToUpdate","recipeCreatorFormIngrArray","recipeCreatorDataToUpdate","patch","setEdamamRecipes","edamamRecipesLoaded","setEdamamRecipesLoaded","handleSearchEdamamApi","edamamURL","recipeQuery","hits","r","healthLabArr","ingrArray","recipeCreatorTextLines","recipeTextLine","x","Append","RotaEditComponent","submitEditedRota","isRotaChanged","setIsRotaChanged","updatedRota","setUpdatedRota","getUserNames","newUpdatedRota","AdminRotaEditScreen","editedRotaSubmitted","setEditedRotaSubmitted","fetchRotaById","RotaId","App","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33df31e5.chunk.js","sourcesContent":["import cookie from \"js-cookie\";\n\n// store in cookie\nconst setCookie = (key, value) => {\n  if (window !== undefined) {\n    cookie.set(key, value, {\n      expires: 1,\n    });\n  }\n};\n\n// remove from cookie\nconst removeCookie = (key) => {\n  if (window !== undefined) {\n    cookie.remove(key, { expires: 1 });\n  }\n};\n\n// get cookie\nconst getCookie = (key) => {\n  if (window !== undefined) {\n    return cookie.get(key);\n  }\n};\n\n// save in local storage\nconst setLocalStorage = (key, value) => {\n  if (window !== undefined) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n// remove from local storage\nconst removeLocalStorage = (key) => {\n  if (window !== undefined) {\n    localStorage.removeItem(key);\n  }\n};\n\n// authenticate the user by passing data to cookie and local storage\n// during login\nconst authenticate = (response, next) => {\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  next();\n};\n\n// access user info from localStorage\nconst isAuth = () => {\n  if (window !== undefined) {\n    const tokenFromCookie = getCookie(\"token\");\n    if (tokenFromCookie) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n};\n\n// loging out\nconst logout = (next) => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  next();\n};\n\n// update user data in local storage\nconst updateUserLocalStorage = (response, next) => {\n  console.log(\"UPDATE USER IN LOCAL STORAGE UTIL\");\n  if (window !== undefined) {\n    let auth = JSON.parse(localStorage.getItem(\"user\"));\n    auth = response.data;\n    localStorage.setItem(\"user\", JSON.stringify(auth));\n  }\n  next();\n};\n\nexport {\n  setCookie,\n  removeCookie,\n  getCookie,\n  setLocalStorage,\n  removeLocalStorage,\n  authenticate,\n  isAuth,\n  logout,\n  updateUserLocalStorage,\n};\n","import React from \"react\";\nimport { Navbar, Nav, Container, Image, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { isAuth, logout } from \"../utilities/authUtilities\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Header = ({ history }) => {\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              <Image\n                height={\"50px\"}\n                className=\"mr-2\"\n                src=\"/images/chef_hat.png\"\n              />\n              <span className=\"logo__text-chef\">Chef</span>{\" \"}\n              <span className=\"text-warning logo__text-helper ml-2\">\n                Helper\n              </span>\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/tasks\">\n                <Nav.Link>\n                  <i className=\"fas fa-clipboard-list\"></i> Tasks\n                </Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/pantry\">\n                <Nav.Link>\n                  <i className=\"fas fa-clipboard\"></i> Pantry\n                </Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/rota\">\n                <Nav.Link>\n                  <i className=\"far fa-calendar-alt\"></i> Rota\n                </Nav.Link>\n              </LinkContainer>\n\n              <LinkContainer to=\"/recipes\">\n                <Nav.Link>\n                  <i className=\"fas fa-utensils\"></i> Recipes\n                </Nav.Link>\n              </LinkContainer>\n              {isAuth() ? (\n                <NavDropdown title={isAuth().name} id=\"username\">\n                  <LinkContainer\n                    to={isAuth().role === \"admin\" ? \"/admin\" : \"/profile\"}\n                  >\n                    <NavDropdown.Item>\n                      {isAuth().role === \"admin\" ? \"Admin Tools\" : \"Profile\"}\n                    </NavDropdown.Item>\n                  </LinkContainer>\n                  {isAuth().role === \"admin\" ? (\n                    <>\n                      <LinkContainer to={\"/admin/users\"}>\n                        <NavDropdown.Item>Users</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to={\"/admin/rota\"}>\n                        <NavDropdown.Item>Rota Tools</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to={\"/admin/recipe\"}>\n                        <NavDropdown.Item>Recipes Tools</NavDropdown.Item>\n                      </LinkContainer>\n                    </>\n                  ) : null}\n                  <NavDropdown.Item\n                    onClick={() => {\n                      logout(() => {\n                        history.push(\"/\");\n                      });\n                    }}\n                  >\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"bg-light\">\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"text-center py-3\">\r\n              <strong>\r\n                &copy; Chef Helper <span className=\"text-warning\">|</span> Pawel\r\n                Karpinski {new Date().getFullYear()}\r\n              </strong>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuth } from \"../utilities/authUtilities\";\r\n\r\nconst ProtectedUserRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuth() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  ></Route>\r\n);\r\n\r\nexport default ProtectedUserRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuth } from \"../utilities/authUtilities\";\r\n\r\nconst ProtectedAdminRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuth() && isAuth().role === \"admin\" ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  ></Route>\r\n);\r\n\r\nexport default ProtectedAdminRoute;\r\n","import React from \"react\";\r\nimport { Carousel, Image, Badge, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction BookmarkedRecipesCarousel({ recipes }) {\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center my-3\">Chef's Favourite Recipes</h2>\r\n      <Carousel pause=\"hover\" className=\"bg-dark\">\r\n        {recipes.map((recipe) => (\r\n          <Carousel.Item key={recipe._id}>\r\n            <Link to={`/recipes/${recipe._id}`}>\r\n              <Image src={recipe.image} alt={recipe.label} fluid />\r\n\r\n              <Carousel.Caption className=\"carousel-caption\">\r\n                <h2 className=\"text-light\">{recipe.label}</h2>\r\n                {recipe.healthLabels.map((label, i) => (\r\n                  <Badge key={i} variant=\"warning\" className=\"m-2 p-1\">\r\n                    {label}\r\n                  </Badge>\r\n                ))}\r\n              </Carousel.Caption>\r\n            </Link>\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BookmarkedRecipesCarousel;\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../utilities/authUtilities\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction HomeScreenUserNavigation({ history }) {\r\n  return (\r\n    <Nav className=\"justify-content-center\" activeKey=\"/home\">\r\n      <LinkContainer to={\"/profile\"}>\r\n        <Nav.Link className=\"text-warning\">\r\n          <i\r\n            class=\"fas fa-users-cog fa-2x\"\r\n            style={{ textShadow: \"1px 1px 3px rgba(0,0,0,.85)\" }}\r\n          ></i>{\" \"}\r\n          <strong className=\"text-dark\">Profile</strong>\r\n        </Nav.Link>\r\n      </LinkContainer>\r\n\r\n      <Nav.Item\r\n        onClick={() => {\r\n          logout(() => {\r\n            history.push(\"/\");\r\n          });\r\n        }}\r\n      >\r\n        <Nav.Link className=\"text-danger\">\r\n          <i\r\n            class=\"fas fa-sign-out-alt fa-2x\"\r\n            style={{ textShadow: \"1px 1px 3px rgba(0,0,0,.85)\" }}\r\n          ></i>{\" \"}\r\n          <strong>Logout</strong>\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default withRouter(HomeScreenUserNavigation);\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../utilities/authUtilities\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction HomeScreenAdminNavigation({ history }) {\r\n  return (\r\n    <Nav className=\"justify-content-center\" activeKey=\"/home\">\r\n      <LinkContainer to={\"/admin/users\"}>\r\n        <Nav.Link className=\"text-dark\">\r\n          <i\r\n            class=\"fas fa-users-cog fa-2x text-warning\"\r\n            style={{ textShadow: \"1px 1px 3px rgba(0,0,0,.85)\" }}\r\n          ></i>{\" \"}\r\n          <strong>Users</strong>\r\n        </Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to={\"/admin/recipe\"}>\r\n        <Nav.Link className=\"text-dark\">\r\n          <i\r\n            className=\"fas fa-utensils fa-2x text-warning\"\r\n            style={{ textShadow: \"1px 1px 3px rgba(0,0,0,.85)\" }}\r\n          ></i>{\" \"}\r\n          <strong>Recipes</strong>\r\n        </Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to={\"/admin/rota\"}>\r\n        <Nav.Link className=\"text-dark\">\r\n          <i\r\n            className=\"far fa-calendar-alt fa-2x text-warning\"\r\n            style={{ textShadow: \"1px 1px 3px rgba(0,0,0,.85)\" }}\r\n          ></i>{\" \"}\r\n          <strong>Rota</strong>\r\n        </Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to={\"/admin\"}>\r\n        <Nav.Link className=\"text-dark\">\r\n          <i\r\n            className=\"fas fa-clipboard-list fa-2x text-warning\"\r\n            style={{ textShadow: \"1px 1px 3px rgba(0,0,0,.85)\" }}\r\n          ></i>{\" \"}\r\n          <strong>Tasks | Pantry</strong>\r\n        </Nav.Link>\r\n      </LinkContainer>\r\n\r\n      <Nav.Item\r\n        onClick={() => {\r\n          logout(() => {\r\n            history.push(\"/\");\r\n          });\r\n        }}\r\n      >\r\n        <Nav.Link className=\"text-danger\">\r\n          <i\r\n            class=\"fas fa-sign-out-alt fa-2x\"\r\n            style={{ textShadow: \"1px 1px 3px rgba(0,0,0,.85)\" }}\r\n          ></i>{\" \"}\r\n          <strong className=\"ml-1\">Logout</strong>\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default withRouter(HomeScreenAdminNavigation);\r\n","const localDate = (date) => {\r\n  const currentDate = new Date(date);\r\n  const localDate = currentDate.toLocaleDateString(undefined, {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n  });\r\n  return localDate;\r\n};\r\n\r\nconst localTime = (time) => {\r\n  const currentTime = new Date(time);\r\n  const localTime = currentTime.toLocaleTimeString(undefined, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  });\r\n  return localTime;\r\n};\r\n\r\nexport { localTime, localDate };\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { localTime, localDate } from \"../utilities/localDateTimeFormatter\";\r\n\r\nfunction HighPriorityTasks({ tasks }) {\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center my-4\">\r\n        <span className=\"text-danger\">Urgent</span> jobs to do\r\n      </h2>\r\n      {tasks.map((task) => (\r\n        <Alert variant=\"danger\">\r\n          <Alert.Heading className=\"d-flex justify-content-between\">\r\n            {task.taskName}{\" \"}\r\n            <i class=\"fas fa-exclamation-circle text-danger\"></i>\r\n          </Alert.Heading>\r\n          <hr />\r\n          <p className=\"mb-0\">\r\n            <strong className=\"text-info\">Assigned to: </strong>\r\n            <strong className=\"text-dark\">{task.assignedTo.name}</strong>\r\n          </p>\r\n          <p>\r\n            <strong className=\"text-info\">Created on: </strong>\r\n            {`${localDate(task.createdAt)} | ${localTime(task.createdAt)}`}\r\n          </p>\r\n        </Alert>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HighPriorityTasks;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { isAuth } from \"../utilities/authUtilities\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n// importing components\nimport BookmarkedRecipesCarousel from \"../components/BookmarkedRecipesCarousel\";\nimport HomeScreenUserNavigation from \"../components/HomeScreenUserNavigation\";\nimport HomeScreenAdminNavigation from \"../components/HomeScreenAdminNavigation\";\nimport HighPriorityTasks from \"../components/HighPriorityTasks\";\n\nconst HomeScreen = () => {\n  let name = isAuth() ? isAuth().name.split(\" \") : [];\n\n  const [bookmarkedRecipes, setBookmarkedRecipes] = useState([]);\n  const [highPriorityTasks, setHighPriorityTasks] = useState([]);\n\n  const fetchBookmarkedRecipes = async () => {\n    const { data } = await axios.get(\n      `${process.env.REACT_APP_API}/recipes/bookmarked`\n    );\n    setBookmarkedRecipes(data);\n  };\n\n  const fetchHighPriorityTasks = async () => {\n    const { data } = await axios.get(`${process.env.REACT_APP_API}/tasks/high`);\n    setHighPriorityTasks(data);\n  };\n\n  useEffect(() => {\n    fetchBookmarkedRecipes();\n    fetchHighPriorityTasks();\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Alert variant=\"secondary\" className=\"my-4\">\n          <Alert.Heading>\n            <h1 className=\"my-4 text-center\">\n              Welcome{\" \"}\n              {isAuth() ? (\n                <span className=\"text-success\">{name[0]} </span>\n              ) : (\n                <span className=\"text-danger\">Stranger </span>\n              )}\n            </h1>\n          </Alert.Heading>\n          <hr />\n          {!isAuth() && (\n            <h3 className=\"text-center\">\n              Please{\" \"}\n              <LinkContainer to=\"/login\">\n                <em className=\"text-info home-link\">login</em>\n              </LinkContainer>{\" \"}\n              or{\" \"}\n              <LinkContainer to=\"/register\">\n                <em className=\"text-success home-link\">register</em>\n              </LinkContainer>{\" \"}\n              to fully enjoy <strong>Chef Helper</strong> App!\n            </h3>\n          )}\n          {isAuth() && isAuth().role === \"admin\" && (\n            <HomeScreenAdminNavigation />\n          )}\n          {isAuth() && isAuth().role === \"user\" && <HomeScreenUserNavigation />}\n        </Alert>\n      </Container>\n      <Container className=\"my-3\">\n        {bookmarkedRecipes.length > 0 && (\n          <BookmarkedRecipesCarousel recipes={bookmarkedRecipes} />\n        )}\n        {highPriorityTasks.length > 0 && (\n          <HighPriorityTasks tasks={highPriorityTasks} />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center my-auto\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport FormContainer from \"../components/FormContainer\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { authenticate, isAuth } from \"../utilities/authUtilities\";\n\nconst LoginScreen = ({ location, history }) => {\n  // state with useState hook\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    buttonText: \"Login\",\n  });\n  // destructuring state\n  const { email, password, buttonText } = formData;\n\n  // submiting the form\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setFormData({ ...formData, buttonText: \"Checking...\" });\n    // axios to connect with backend\n    axios({\n      method: \"POST\",\n      url: `${process.env.REACT_APP_API}/login`,\n      data: { email, password },\n    })\n      .then((response) => {\n        // save the response (user and token) local storage/cookie\n        authenticate(response, () => {\n          // emptying the state\n          setFormData({\n            ...formData,\n            email: \"\",\n            password: \"\",\n          });\n          // toast message after successful login\n          toast.success(`Hi ${response.data.user.name}, Welcome back!`);\n        });\n      })\n      .catch((error) => {\n        console.log(\"SIGNUP ERROR\", error.response.data);\n        setFormData({ ...formData, buttonText: \"Submit\" });\n        toast.error(error.response.data.error);\n      });\n  };\n\n  // handling input changes\n  const handleInputChange = (name) => (event) => {\n    console.log(event.target.value);\n    // getting existing state and update the key with same name as function argument\n    setFormData({ ...formData, [name]: event.target.value });\n  };\n\n  return (\n    <>\n      <FormContainer>\n        <ToastContainer />\n        {isAuth() ? <Redirect to=\"/\" /> : null}\n        <h1 className=\"text-center\">Please login</h1>\n        <Form\n          className=\"border border-secondary p-3 my-4 rounded\"\n          onSubmit={handleSubmit}\n        >\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              onChange={handleInputChange(\"email\")}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              onChange={handleInputChange(\"password\")}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"success\">\n            {buttonText}\n          </Button>\n        </Form>\n      </FormContainer>\n\n      <Row className=\"py-3 text-center\">\n        <Col>\n          New User?{\" \"}\n          <Link className=\"text-danger\" to={\"/register\"}>\n            <strong>\n              <em>Register</em>\n            </strong>\n          </Link>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState } from \"react\";\n//import { Link } from 'react-router-dom'\nimport { Form, Button, Row } from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport FormContainer from \"../components/FormContainer\";\nimport axios from \"axios\";\n\nconst RegisterScreen = ({ location, history }) => {\n  // state with useState hook\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    buttonText: \"Submit\",\n  });\n  // destructuring state\n  const { name, email, password, confirmPassword, buttonText } = formData;\n\n  // submiting the form\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setFormData({ ...formData, buttonText: \"Submitting\" });\n    // axios to connect with backend\n    axios({\n      method: \"POST\",\n      url: `${process.env.REACT_APP_API}/signup`,\n      data: { name, email, password },\n    })\n      .then((response) => {\n        setFormData({\n          ...formData,\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          buttonText: \"Submited\",\n        });\n        toast.success(response.data.message);\n      })\n      .catch((error) => {\n        console.log(\"SIGNUP ERROR\", error.response.data);\n        setFormData({ ...formData, buttonText: \"Submit\" });\n        toast.error(error.response.data.error);\n      });\n  };\n\n  // handling input changes\n  const handleInputChange = (name) => (event) => {\n    console.log(event.target.value);\n    // getting existing state and update the key with same name as function argument\n    setFormData({ ...formData, [name]: event.target.value });\n  };\n\n  return (\n    <FormContainer>\n      <h1 className=\"text-center\">Please Register</h1>\n\n      <ToastContainer />\n\n      <Form\n        className=\"border border-secondary p-3 my-4 rounded\"\n        onSubmit={handleSubmit}\n      >\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleInputChange(\"name\")}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={handleInputChange(\"email\")}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={handleInputChange(\"password\")}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={handleInputChange(\"confirmPassword\")}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"success\">\n          {buttonText}\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        {/* <Col>\n\t\t\t\t\tAlready registered?{' '}\n\t\t\t\t\t<Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Link>\n\t\t\t\t</Col> */}\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React from \"react\";\nimport { Card, Button, Badge, ListGroup } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nfunction RecipeComponent({ recipe }) {\n  const getImageURL = (path) => {\n    let url;\n    if (path.startsWith(\"uploads/\")) {\n      url = `http://localhost:8000/${path}`;\n    } else {\n      url = `${path}`;\n    }\n\n    return url;\n  };\n  return (\n    <Card className={\"my-3 rounded\"}>\n      <Card.Img variant=\"top\" src={recipe.image} />\n      <Card.Body>\n        <Card.Title>{recipe.label}</Card.Title>\n        <Card.Text>\n          {recipe.healthLabels.map((label, i) => (\n            <Badge key={i} variant=\"success\" className=\"m-1\">\n              {label}\n            </Badge>\n          ))}\n        </Card.Text>\n        <Card.Text>\n          <ListGroup>\n            {recipe.ingredients.map((ingr, i) => (\n              <ListGroup.Item key={i}>{ingr.text}</ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card.Text>\n\n        <LinkContainer to={`recipes/${recipe._id}`}>\n          <Button variant=\"warning\">View Details</Button>\n        </LinkContainer>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default RecipeComponent;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, InputGroup, FormControl } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport RecipeComponent from \"../components/RecipeComponent\";\n\nconst RecipesScreen = () => {\n  const [recipes, setRecipes] = useState([]);\n\n  const fetchRecipes = async () => {\n    const { data } = await axios.get(`${process.env.REACT_APP_API}/recipes`);\n    setRecipes(data);\n  };\n\n  // search for recipes functionality\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n\n  const handleSearchInputChange = (e) => {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n    let storedRecipes = recipes.filter((recipe) => {\n      let recipeNameLowerCase = recipe.label.toLowerCase();\n      return recipeNameLowerCase.match(searchInput.toLowerCase());\n    });\n    setFilteredRecipes(storedRecipes);\n  };\n\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  useEffect(() => {\n    //\n  }, [filteredRecipes, searchInput]);\n\n  return (\n    <>\n      <Row>\n        <Col>\n          {filteredRecipes.length !== 0 ? (\n            <h1>All Recipes ({filteredRecipes.length})</h1>\n          ) : (\n            <h1>All Recipes ({recipes.length})</h1>\n          )}\n          {recipes.length === 0 && (\n            <h1 className=\"text-info\">Please wait... loading recipes data</h1>\n          )}\n        </Col>\n        <Col>\n          <InputGroup className=\"mt-2\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"basic-addon1\">\n                <i class=\"fas fa-search\"></i>\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              placeholder=\"Search for recipes...\"\n              aria-label=\"Recipe name\"\n              aria-describedby=\"basic-addon1\"\n              onChange={handleSearchInputChange}\n            />\n          </InputGroup>\n        </Col>\n      </Row>\n      <Row>\n        {searchInput.length > 0\n          ? filteredRecipes.map((recipe, index) => (\n              <Col sm={12} md={6} lg={4} xl={3}>\n                <RecipeComponent recipe={recipe} key={recipe._id} />\n              </Col>\n            ))\n          : recipes.map((recipe) => (\n              <Col sm={12} md={6} lg={4} xl={3}>\n                <RecipeComponent key={recipe._id} recipe={recipe} />\n              </Col>\n            ))}\n\n        {recipes.length === 0 && (\n          <p className=\"text-danger\">\n            <strong>Ooops!!!</strong> Something went wrong... No Recipes found!\n          </p>\n        )}\n      </Row>\n    </>\n  );\n};\n\nexport default RecipesScreen;\n","import React from \"react\";\nimport {\n  Row,\n  Col,\n  Button,\n  Container,\n  Image,\n  ListGroup,\n  Badge,\n} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nfunction SingleRecipeComponent({ recipe }) {\n  const getImageURL = (path) => {\n    let url;\n    if (path.startsWith(\"uploads/\")) {\n      url = `http://localhost:8000/${path}`;\n    } else {\n      url = `${path}`;\n    }\n\n    return url;\n  };\n\n  return (\n    <Container className=\"my-3\">\n      <Row>\n        <Col md={4}>\n          <Image src={getImageURL(recipe.image)} alt={recipe.label} fluid />\n          {recipe.healthLabels.map((label, i) => (\n            <Badge key={i} variant=\"success\" className=\"m-1\">\n              {label}\n            </Badge>\n          ))}\n        </Col>\n        <Col md={4}>\n          <ListGroup flush=\"true\">\n            <ListGroup.Item>\n              <h3>{recipe.label}</h3>\n            </ListGroup.Item>\n\n            {recipe.ingredients.map((ingr, i) => (\n              <ListGroup.Item key={i} variant=\"success\">\n                {ingr.text}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <ListGroup flush=\"true\">\n            <ListGroup.Item>\n              <h3>Weight / Pantry</h3>\n            </ListGroup.Item>\n            {recipe.ingredients.map((ing, i) => (\n              <ListGroup.Item\n                key={ing._id}\n                variant=\"info\"\n                className=\"d-flex justify-content-between\"\n              >\n                <>\n                  <span>\n                    <strong>product: </strong>\n                    <p>{ing.productId.name}</p>\n                  </span>\n                  <span>\n                    <strong>required: </strong>\n                    <p>{ing.weight} (g)</p>\n                  </span>\n                  <span>\n                    <strong>pantry: </strong>\n                    <p>{ing.productId.countInStock}(g)</p>\n                  </span>\n                </>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Col>\n      </Row>\n      <Row className=\"my-3\">\n        <Col>\n          <LinkContainer to={\"/recipes\"}>\n            <Button variant=\"danger\">Back</Button>\n          </LinkContainer>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SingleRecipeComponent;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Spinner, Container } from \"react-bootstrap\";\nimport SingleRecipeComponent from \"../components/SingleRecipeComponent\";\n\nconst RecipeScreen = () => {\n  const [recipe, setRecipe] = useState({});\n  const [isFetching, setIsFetching] = useState(true);\n  const { id } = useParams();\n\n  useEffect(() => {\n    // fetching single recipe with id from url\n    const fetchRecipe = async () => {\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_API}/recipes/${id}`\n      );\n      setRecipe(data);\n      setIsFetching(false);\n    };\n\n    fetchRecipe();\n  }, []);\n\n  return (\n    <Container>\n      {isFetching ? (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      ) : (\n        <SingleRecipeComponent recipe={recipe} />\n      )}\n    </Container>\n  );\n};\n\nexport default RecipeScreen;\n","import React from \"react\";\nimport { Card, ListGroup } from \"react-bootstrap\";\n\nfunction RotaDayCardComponent({ day, employees }) {\n  const dayOfTheWeek = day.day;\n  const date = day.date;\n  const dateFormatted = date.split(\",\");\n\n  const employeesArr = [...employees];\n\n  const getName = (id) => {\n    const name = employeesArr.filter((e) => e._id === id);\n    return name[0][\"name\"];\n  };\n\n  return (\n    <Card\n      className=\"my-3 rounded\"\n      border={day.dayId === 6 ? \"danger\" : \"secondary\"}\n    >\n      <Card.Header>\n        <Card.Title>\n          <strong\n            className={`${\n              day.dayId === 6 ? \"text-danger\" : \"text-secondary\"\n            } rota-dayCard__day`}\n          >\n            {dayOfTheWeek.substring(0, 3)}\n          </strong>\n        </Card.Title>\n        {`${dateFormatted[1]}, ${dateFormatted[2].substring(0, 5)}`}\n      </Card.Header>\n      <Card.Body>\n        <ListGroup flush=\"true\">\n          {day.employees.map((emp, i) => (\n            <ListGroup.Item\n              key={emp._id}\n              className=\"d-flex justify-content-between\"\n            >\n              <p>{getName(emp.nameId)}</p>\n              <p className=\"text-info\">\n                <strong>{emp.start}</strong>\n              </p>\n              <p>&nbsp;|&nbsp;</p>\n              <p className=\"text-info\">\n                <strong>{emp.finish}</strong>\n              </p>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default RotaDayCardComponent;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col } from \"react-bootstrap\";\nimport RotaDayCardComponent from \"../components/RotaDayCardComponent\";\n\nfunction RotaDisplayComponentCards() {\n  const [employees, setEmployees] = useState([]);\n  const [rota, setRota] = useState([]);\n  const [isFetchingEmployees, setIsFetchingEmployees] = useState(true);\n  const [isFetchingRota, setIsFetchingRota] = useState(true);\n\n  const getEmployees = async () => {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API}/users/names`\n    );\n    if (response) {\n      setEmployees(response.data);\n      setIsFetchingEmployees(false);\n    } else {\n      console.log(\"something went wrong when fetching employees...\");\n    }\n  };\n\n  const getRota = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API}/rota`);\n    if (response) {\n      setRota(response.data);\n      setIsFetchingRota(false);\n    } else {\n      console.log(\"something went wrong when fetching rota...\");\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getRota();\n  }, []);\n\n  return (\n    <>\n      {!isFetchingEmployees && !isFetchingRota ? (\n        rota.map((week) => (\n          <React.Fragment key={week._id}>\n            <h3>\n              Rota for week starting:{\" \"}\n              <strong className=\"text-success\">\n                {week.weekStart.substring(0, 16)}\n              </strong>\n            </h3>\n            <Row>\n              {week.weeklyRota.map((day, i) => (\n                <Col sm={12} md={6} lg={4} xl={3} key={day.dayId + i}>\n                  <RotaDayCardComponent\n                    key={day.dayId}\n                    day={day}\n                    employees={employees}\n                  />\n                </Col>\n              ))}\n            </Row>\n          </React.Fragment>\n        ))\n      ) : (\n        <p>loading data...</p>\n      )}\n    </>\n  );\n}\n\nexport default RotaDisplayComponentCards;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport RotaDisplayComponentCards from \"../components/RotaDisplayComponentCards\";\n\nconst RotaScreen = () => {\n  return (\n    <Container>\n      <RotaDisplayComponentCards />\n    </Container>\n  );\n};\n\nexport default RotaScreen;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  Table,\n  Container,\n  Button,\n  Modal,\n  Form,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport axios from \"axios\";\nimport { isAuth } from \"../utilities/authUtilities\";\n\nimport PaginationComponent from \"../components/PaginationComponent\";\n\nconst PantryScreen = () => {\n  const [products, setProducts] = useState([]);\n\n  // Modal handling\n  const [modalData, setModalData] = useState([]);\n  const [modalDataAdd, setModalDataAdd] = useState(0);\n  const [modalDataSubt, setModalDataSubt] = useState(0);\n  const [show, setShow] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [submitAdd, setSubmitAdd] = useState(false);\n  const [submitRemove, setSubmitRemove] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleCloseRemove = () => setShowRemove(false);\n  const handleShow = (id) => {\n    console.log(id);\n    setModalData(() => products.find((product) => product._id === id));\n    setShow(true);\n  };\n  const handleShowRemove = (id) => {\n    console.log(id);\n    setModalData(() => products.find((product) => product._id === id));\n    setShowRemove(true);\n  };\n\n  const handleModalSubmit = (e) => {\n    const { name, countInStock } = modalData;\n    e.preventDefault();\n    axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API}/products/${modalData._id}`,\n      data: { name, countInStock },\n    }).then((response) => {\n      toast.success(`Quantity of ${name} updated sucesfully!`);\n      setSubmitAdd(true);\n    });\n\n    //closing modal\n    handleClose();\n  };\n\n  const handleModalSubmitRemove = (e) => {\n    const { _id, name } = modalData;\n    e.preventDefault();\n    axios({\n      method: \"DELETE\",\n      url: `${process.env.REACT_APP_API}/products/${modalData._id}`,\n      data: { _id },\n    }).then((response) => {\n      console.log(\"item removed\");\n      toast.success(`Item ${name} has been deleted`);\n      setProducts(products.filter((product) => product._id !== _id));\n      setSubmitRemove(true);\n    });\n\n    //closing modal\n    handleCloseRemove();\n  };\n\n  const handleAddQuantity = (e) => {\n    //\n    e.preventDefault();\n    setModalData({\n      ...modalData,\n      countInStock: Number(modalData.countInStock) + Number(modalDataAdd),\n    });\n    setModalDataAdd(0);\n  };\n  const handleSubtractQuantity = (e) => {\n    //\n    e.preventDefault();\n    setModalData({\n      ...modalData,\n      countInStock: Number(modalData.countInStock) - Number(modalDataSubt),\n    });\n    setModalDataSubt(0);\n  };\n\n  // fetching products on load method\n  const fetchProducts = async () => {\n    const { data } = await axios.get(`${process.env.REACT_APP_API}/products`);\n    setProducts(data);\n    getCurrentProducts();\n  };\n\n  // pagination functionality\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(5);\n  const [currentProductsState, setCurrentProductState] = useState([]);\n\n  // Get current products\n  const getCurrentProducts = () => {\n    const indexOfLastProduct = currentPage * productsPerPage;\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n    let currentProducts = products.slice(\n      indexOfFirstProduct,\n      indexOfLastProduct\n    );\n    setCurrentProductState(currentProducts);\n  };\n\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  // search for products functionality\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [filteredProducts, setFilteredProducts] = useState([]);\n\n  const handleSearchInputChange = (e) => {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n    let pantryProducts = products.filter((prod) => {\n      let productName = prod.name.toLowerCase();\n      //return prod.name.match(searchInput);\n      return productName.match(searchInput.toLowerCase());\n    });\n    setFilteredProducts(pantryProducts);\n  };\n\n  // Use Effect hooks for fetching all products on page display\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  useEffect(() => {\n    //\n  }, [searchInput, filteredProducts]);\n\n  useEffect(() => {\n    if (submitAdd) {\n      fetchProducts();\n    }\n  }, [submitAdd]);\n\n  return (\n    <Container>\n      <Row className=\"my-3\">\n        <Col>\n          <ToastContainer />\n\n          <h1>Pantry</h1>\n        </Col>\n        <Col>\n          <InputGroup className=\"mt-2\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"basic-addon1\">\n                <i className=\"fas fa-search\"></i>\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              placeholder=\"Search for product...\"\n              aria-label=\"Product name\"\n              aria-describedby=\"basic-addon1\"\n              onChange={handleSearchInputChange}\n            />\n          </InputGroup>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Table striped bordered hover size=\"sm\">\n            <thead className=\"bg-dark text-light\">\n              <tr>\n                <th>Name</th>\n                <th>Quantity (grams)</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {searchInput.length > 0\n                ? filteredProducts.map((product, index) => (\n                    <tr key={index}>\n                      <td>{product.name}</td>\n                      <td>{product.countInStock}</td>\n                      {isAuth() ? (\n                        <td className=\"text-right\">\n                          <Button\n                            className=\"mx-1\"\n                            variant=\"warning\"\n                            size=\"sm\"\n                            onClick={() => handleShow(product._id)}\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                          {isAuth() && isAuth().role === \"admin\" ? (\n                            <Button\n                              className=\"mx-1\"\n                              variant=\"danger\"\n                              size=\"sm\"\n                              onClick={() => handleShowRemove(product._id)}\n                            >\n                              <i className=\"fas fa-minus\"></i>\n                            </Button>\n                          ) : null}\n                        </td>\n                      ) : (\n                        <td>\n                          <p className=\"text-danger text-small\">\n                            <small>Please login to see actions</small>\n                          </p>\n                        </td>\n                      )}\n                    </tr>\n                  ))\n                : products.map((product, index) => (\n                    <tr key={index}>\n                      <td>{product.name}</td>\n                      <td>{product.countInStock}</td>\n                      {isAuth() ? (\n                        <td className=\"text-right\">\n                          <Button\n                            className=\"mx-1\"\n                            variant=\"warning\"\n                            size=\"sm\"\n                            onClick={() => handleShow(product._id)}\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                          {isAuth() && isAuth().role === \"admin\" ? (\n                            <Button\n                              className=\"mx-1\"\n                              variant=\"danger\"\n                              size=\"sm\"\n                              onClick={() => handleShowRemove(product._id)}\n                            >\n                              <i className=\"fas fa-minus\"></i>\n                            </Button>\n                          ) : null}\n                        </td>\n                      ) : (\n                        <td>\n                          <p className=\"text-danger text-small\">\n                            <small>Please login to see actions</small>\n                          </p>\n                        </td>\n                      )}\n                    </tr>\n                  ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {/* <Row className=\"my-4 \">\n        <PaginationComponent\n          productsPerPage={productsPerPage}\n          totalProducts={products.length}\n          paginate={paginate}\n          className=\"text-center\"\n        />\n      </Row> */}\n      <Modal show={show} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Update quantity of{\" \"}\n            <span className=\"text-danger\">{modalData.name}</span>\n          </Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleModalSubmit}>\n          <Modal.Body>\n            <Form.Group>\n              <Form.Label>Available Quantity (grams)</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder={modalData.countInStock}\n                name={modalData.countInStock}\n                readOnly\n              />\n            </Form.Group>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Add (grams)</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  value={modalDataAdd}\n                  name={modalDataAdd}\n                  onChange={(e) => setModalDataAdd(e.target.value)}\n                />\n                <Button\n                  variant=\"warning\"\n                  className=\"btn-sm mt-1\"\n                  onClick={handleAddQuantity}\n                >\n                  Add\n                </Button>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Subtract (grams)</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  value={modalDataSubt}\n                  name={modalDataSubt}\n                  onChange={(e) => setModalDataSubt(e.target.value)}\n                />\n                <Button\n                  variant=\"warning\"\n                  className=\"btn-sm mt-1\"\n                  onClick={handleSubtractQuantity}\n                >\n                  Subtract\n                </Button>\n              </Form.Group>\n            </Form.Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button variant=\"success\" type=\"submit\">\n              Update\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n      {/* Remove Product Modal */}\n      <Modal show={showRemove} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Please Confirm</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleModalSubmitRemove}>\n          <Modal.Body>\n            <h3>\n              Remove of <span className=\"text-danger\">{modalData.name}</span>\n            </h3>\n            <Form.Group>\n              <Form.Label>Available Quantity (grams)</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder={modalData.countInStock}\n                name={modalData.countInStock}\n                readOnly\n              />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"warning\" onClick={handleCloseRemove}>\n              Cancel\n            </Button>\n            <Button variant=\"danger\" type=\"submit\">\n              Remove\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default PantryScreen;\n","// Tasks Form Handling\n// Priority Colour Styles\nconst setPriorityColour = (priority) => {\n  let colour;\n  switch (priority) {\n    case \"low\":\n      colour = \"info\";\n      break;\n    case \"medium\":\n      colour = \"warning\";\n      break;\n    case \"high\":\n      colour = \"danger\";\n      break;\n    default:\n      colour = \"success\";\n  }\n  return colour;\n};\n\nexport { setPriorityColour };\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  Table,\n  Container,\n  Button,\n  Form,\n  Modal,\n  Spinner,\n} from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport axios from \"axios\";\nimport { setPriorityColour } from \"../utilities/stylingUtilities\";\nimport { isAuth, getCookie } from \"../utilities/authUtilities\";\nimport { formatDistance, subDays, format } from \"date-fns\";\n\nconst TasksScreen = () => {\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [modalData, setModalData] = useState([]);\n  const [show, setShow] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [closeRemove, setCloseRemove] = useState(false);\n  const [submitRemove, setSubmitRemove] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [taskPriority, setTaskPriority] = useState(\"select\");\n  const [isTaskUpdated, setIsTaskUpdated] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleCloseRemove = () => setShowRemove(false);\n  const handleCloseEditModal = () => setShowEditModal(false);\n\n  const handleModalSubmitRemove = (e) => {\n    const { _id } = modalData;\n    e.preventDefault();\n    axios({\n      method: \"DELETE\",\n      url: `${process.env.REACT_APP_API}/tasks/${modalData._id}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      data: { _id },\n    }).then((response) => {\n      console.log(\"item removed\");\n      toast.success(`Task has been deleted`);\n      setTasks(tasks.filter((task) => task._id !== _id));\n      setSubmitRemove(true);\n    });\n\n    //closing modal\n    handleCloseRemove();\n  };\n\n  const handleShowRemove = (id) => {\n    console.log(id);\n    setModalData(() => tasks.find((task) => task._id === id));\n    setShowRemove(true);\n  };\n\n  const handleTaskCompleted = (e) => {\n    e.preventDefault();\n\n    const { _id, completed, priority } = modalData;\n    axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API}/tasks/finished/${_id}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      data: { completed, priority },\n    }).then((response) => {\n      toast.success(`Task has been completed!`);\n      setIsCompleted(true);\n    });\n  };\n\n  // Update Task Modal Handlers\n  // handling Tasks form changes\n  const handleTaskInputChange = (name) => (event) => {\n    console.log(event.target.value);\n    // getting existing state and update the key with same name as function argument\n    setModalData({ ...modalData, [name]: event.target.value });\n    console.log(modalData);\n  };\n\n  const changePriority = (event) => {\n    setTaskPriority(event.target.value);\n    setModalData({ ...modalData, priority: event.target.value });\n  };\n\n  const changeAssignedTo = (event) => {\n    setModalData({ ...modalData, assignedTo: event.target.value });\n  };\n\n  // submitting edited task\n  const handleEditTaskSubmit = (e) => {\n    e.preventDefault();\n    const { _id, taskName, assignedTo, priority } = modalData;\n    axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API}/tasks/admin/${_id}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      data: { taskName, priority, assignedTo },\n    }).then((response) => {\n      toast.success(`Task has been updated`);\n      setIsTaskUpdated(true);\n      handleCloseEditModal();\n    });\n  };\n\n  const handleShowEditModal = (id) => {\n    setModalData(() => tasks.find((task) => task._id === id));\n    setShowEditModal(true);\n    setIsTaskUpdated(false);\n  };\n\n  // fetching tasks on load\n  const fetchTasks = async () => {\n    const { data } = await axios.get(`${process.env.REACT_APP_API}/tasks`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n    });\n    setTasks(data);\n    setIsCompleted(false);\n  };\n\n  // fetching users on load\n  const fetchUsers = async () => {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API}/users/names`\n    );\n    //console.log(response);\n    if (response) {\n      setUsers(response.data);\n    } else {\n      console.log(\"something went wrong when fetching users...\");\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n    fetchTasks();\n    return () => {\n      setUsers([]);\n      setTasks([]);\n    };\n  }, []);\n\n  useEffect(() => {\n    fetchTasks();\n  }, [isCompleted, isTaskUpdated]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <ToastContainer />\n          <h1>Jobs to-do List</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Table bordered hover size=\"sm\">\n            <thead className=\"bg-dark text-light\">\n              <tr>\n                <th>Job to do</th>\n                <th>Assigned To</th>\n                <th>Priority</th>\n                <th>Date / Time</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.map((task, index) => (\n                <tr key={index}>\n                  <td className={task.completed ? \"table-success\" : null}>\n                    {task.taskName}\n                  </td>\n                  <td className={task.completed ? \"table-success\" : null}>\n                    {task.assignedTo.name.split(\" \")[0]}\n                  </td>\n                  <td\n                    className={`table-${setPriorityColour(\n                      task.priority\n                    )} text-center`}\n                  >\n                    {task.priority}\n                  </td>\n                  <td className={task.completed ? \"table-success\" : null}>\n                    {task.createdAt.split(\"T\")[0]}\n                    <span className=\"text-danger\"> | </span>\n                    {task.createdAt.split(\"T\")[1].split(\".\")[0]}\n                  </td>\n                  {isAuth() ? (\n                    <td className=\"d-flex\">\n                      <Form inline={true} onSubmit={handleTaskCompleted}>\n                        <Button\n                          disabled={task.completed ? true : false}\n                          className=\"mx-1\"\n                          variant=\"success\"\n                          size=\"sm\"\n                          onClick={() => {\n                            setModalData({\n                              ...modalData,\n                              _id: task._id,\n                              priority: \"done\",\n                              completed: true,\n                            });\n                          }}\n                          type=\"submit\"\n                        >\n                          <i className=\"fas fa-check\"></i>\n                        </Button>\n                      </Form>\n                      {isAuth() && isAuth().role === \"admin\" ? (\n                        <>\n                          <Button\n                            className=\"mx-1\"\n                            disabled={task.completed ? true : false}\n                            variant=\"warning\"\n                            size=\"sm\"\n                            onClick={() => handleShowEditModal(task._id)}\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n\n                          <Button\n                            /* disabled={task.completed ? false : true} */\n                            className=\"mx-1\"\n                            variant=\"danger\"\n                            size=\"sm\"\n                            onClick={() => handleShowRemove(task._id)}\n                          >\n                            <i className=\"fas fa-minus\"></i>\n                          </Button>\n                        </>\n                      ) : null}\n                    </td>\n                  ) : (\n                    <td>\n                      <p className=\"text-danger text-small\">\n                        <small>Please login to see actions</small>\n                      </p>\n                    </td>\n                  )}\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {/* Remove Product Modal */}\n      <Modal show={showRemove} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Please Confirm</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleModalSubmitRemove}>\n          <Modal.Body>\n            <h3>\n              Remove of <span className=\"text-danger\">completed task</span>\n            </h3>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"warning\" onClick={handleCloseRemove}>\n              Cancel\n            </Button>\n            <Button variant=\"danger\" type=\"submit\">\n              Remove\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n      {/* Edit Task Privileges */}\n      <Modal show={showEditModal} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Task</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleEditTaskSubmit}>\n          <Modal.Body>\n            <h3>\n              Task : <span className=\"text-danger\">{modalData.taskName}</span>\n            </h3>\n            <Form.Group controlId=\"Name\">\n              <Form.Label>Job to do</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Task Name\"\n                onChange={handleTaskInputChange(\"taskName\")}\n                value={modalData.taskName}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"priority\">\n              <Form.Label>Priority</Form.Label>\n\n              <Form.Control\n                as=\"select\"\n                onChange={changePriority}\n                value={modalData.priority}\n                className={`bg-${setPriorityColour(\n                  modalData.priority\n                )} text-light`}\n              >\n                <option className=\"bg-info\" value=\"low\">\n                  Low\n                </option>\n                <option className=\"bg-warning\" value=\"medium\">\n                  Medium\n                </option>\n                <option className=\"bg-danger\" value=\"high\">\n                  High\n                </option>\n              </Form.Control>\n            </Form.Group>\n            {users.length !== 0 ? (\n              <Form.Group controlId=\"assignedTo\">\n                <Form.Label>Assign Task to:</Form.Label>\n                <Form.Control as=\"select\" onChange={changeAssignedTo}>\n                  {users.length !== 0 ? (\n                    users.map((user) => (\n                      <option\n                        selected={modalData.assignedTo}\n                        key={user._id}\n                        value={user._id}\n                      >\n                        {user.name}\n                      </option>\n                    ))\n                  ) : (\n                    <option className=\"bg-danger text-light\">\n                      Error fetching users\n                    </option>\n                  )}\n                </Form.Control>\n              </Form.Group>\n            ) : (\n              <Spinner />\n            )}\n            {/*   */}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={handleCloseEditModal}>\n              Cancel\n            </Button>\n            <Button variant=\"warning\" type=\"submit\">\n              Update Task\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default TasksScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport axios from \"axios\";\nimport jwt from \"jsonwebtoken\";\n\nconst ActivateAccountScreen = ({ match, history }) => {\n  // state with useState hook\n  const [formData, setFormData] = useState({\n    name: \"\",\n    token: \"\",\n    show: true,\n  });\n\n  // grabing token using useEffect hook\n  useEffect(() => {\n    let token = match.params.token;\n    // decoding name from the token using jsonwebtoken\n    let { name } = jwt.decode(token);\n    // console.log(token);\n    // saving name and token in the state\n    if (token) {\n      setFormData({ ...setFormData, name, token });\n    }\n  }, [match.params.token]);\n\n  // destructuring state\n  const { name, token, show } = formData;\n\n  // Activating the account\n  const clickActivate = () => {\n    // axios to connect with backend\n    axios({\n      method: \"POST\",\n      url: `${process.env.REACT_APP_API}/activate`,\n      data: { token },\n    })\n      .then((response) => {\n        setFormData({\n          ...formData,\n          show: false,\n        });\n        toast.success(response.data.message);\n        setTimeout(() => {\n          history.push(\"/login\");\n        }, 4000);\n      })\n      .catch((error) => {\n        console.log(\"ACCOUNT ACTIVATION\", error.response.data.error);\n        toast.error(error.response.data.error);\n      });\n  };\n\n  return (\n    <>\n      <ToastContainer />\n\n      <h1 className=\"text-center\">\n        Please confirm the account activation for{\" \"}\n        <span className=\"text-danger\">{name}</span>{\" \"}\n      </h1>\n      <p>Please click button below to complete the registration process.</p>\n\n      <Button onClick={clickActivate} variant={\"success\"}>\n        Activate Account\n      </Button>\n    </>\n  );\n};\n\nexport default ActivateAccountScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, Form, Button } from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { getCookie, updateUserLocalStorage } from \"../utilities/authUtilities\";\nimport axios from \"axios\";\n\nconst ProfileScreen = () => {\n  const [isFetchingUser, setIsFetchingUser] = useState(true);\n  const [formData, setFormData] = useState({\n    _id: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    buttonText: \"Update\",\n  });\n  // destructuring state\n  const { _id, name, email, password, confirmPassword, buttonText } = formData;\n\n  const token = `Bearer ${getCookie(\"token\")}`;\n\n  // fetching users on load\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getCookie(\"token\")}`,\n    },\n  };\n\n  const fetchUser = async () => {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API}/users/profile`,\n      config\n    );\n    //console.log(response);\n    if (response) {\n      setFormData({\n        ...formData,\n        _id: response.data._id,\n        name: response.data.name,\n        email: response.data.email,\n        buttonText: \"Update\",\n      });\n      setIsFetchingUser(false);\n    } else {\n      console.log(\"oops! something went wrong...\");\n    }\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  // submiting the form\n  const handleSubmitUpdate = (event) => {\n    event.preventDefault();\n\n    if (password !== confirmPassword)\n      return toast.error(\"Both passwords don't match\");\n\n    setFormData({ ...formData, buttonText: \"Submitting\" });\n    // axios to connect with backend\n    axios({\n      method: \"PUT\",\n      url: `${process.env.REACT_APP_API}/users/profile/`,\n      data: { name, email, password },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then((response) => {\n        console.log(\"UPDATE PROFILE SUCCESSFUL\");\n        updateUserLocalStorage(response, () => {\n          toast.success(response.data.message);\n          setFormData({\n            ...formData,\n            buttonText: \"Updated\",\n          });\n        });\n      })\n      .catch((error) => {\n        console.log(\"UPDATE PROFILE ERROR\", error.response.data);\n        toast.error(error.response.data.error);\n      });\n  };\n\n  // handling input changes\n  const handleInputChange = (name) => (event) => {\n    console.log(event.target.value);\n    // getting existing state and update the key with same name as function argument\n    setFormData({ ...formData, [name]: event.target.value });\n  };\n\n  return (\n    <Container>\n      <ToastContainer />\n      <Row>\n        <Col>\n          <h1 className=\"my-4\">User Profile</h1>\n          <h4>\n            You can <strong className=\"text-warning\">update</strong> your login\n            details\n          </h4>\n        </Col>\n      </Row>\n      <Row className=\"text-center text-info font-weight-bold\">\n        <Form\n          onSubmit={handleSubmitUpdate}\n          className=\"border border-secondary p-3 my-4 rounded\"\n        >\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={handleInputChange(\"name\")}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={handleInputChange(\"email\")}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={handleInputChange(\"password\")}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={confirmPassword}\n              onChange={handleInputChange(\"confirmPassword\")}\n            ></Form.Control>\n          </Form.Group>\n          <Button type=\"submit\" variant=\"warning\">\n            {buttonText}\n          </Button>\n        </Form>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form, Button, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n// components\nimport HomeScreenAdminNavigation from \"../components/HomeScreenAdminNavigation\";\n// helper methods\nimport { setPriorityColour } from \"../utilities/stylingUtilities\";\nimport { getCookie, isAuth } from \"../utilities/authUtilities.js\";\n\nconst AdminScreen = () => {\n  // state with useState hook\n  const [taskPriority, setTaskPriority] = useState(\"select\");\n  const [taskFormData, setTaskFormData] = useState({\n    taskName: \"\",\n    assignedTo: \"\",\n    priority: \"low\",\n  });\n  const [users, setUsers] = useState([]);\n  const [productsFormData, setProductsFormData] = useState({\n    name: \"\",\n    countInStock: \"\",\n    price: \"\",\n    defaultWeightInGrams: \"\",\n  });\n  const [isFetchingProducts, setIsFetchingProducts] = useState(true);\n\n  const [products, setProducts] = useState([]);\n\n  const [uploading, setUploading] = useState(false);\n\n  // destructuring state\n  const { name, countInStock, price, defaultWeightInGrams } = productsFormData;\n  const { taskName, assignedTo, priority } = taskFormData;\n\n  // handling Product form changes\n  const handleProductInputChange = (name) => (event) => {\n    console.log(event.target.value);\n    // getting existing state and update the key with same name as function argument\n    setProductsFormData({ ...productsFormData, [name]: event.target.value });\n  };\n  // handling Tasks form changes\n  const handleTaskInputChange = (name) => (event) => {\n    console.log(event.target.value);\n    // getting existing state and update the key with same name as function argument\n    setTaskFormData({ ...taskFormData, [name]: event.target.value });\n    console.log(taskFormData);\n  };\n\n  // submiting the Product form\n  const handleProductSubmit = (event) => {\n    event.preventDefault();\n    setProductsFormData({ ...productsFormData });\n    // axios to connect with backend\n    axios({\n      method: \"POST\",\n      url: `${process.env.REACT_APP_API}/products/`,\n      data: { name, countInStock, price, defaultWeightInGrams },\n    })\n      .then((response) => {\n        setProductsFormData({\n          ...productsFormData,\n          name: \"\",\n          countInStock: \"\",\n          price: \"\",\n          defaultWeightInGrams: \"\",\n        });\n        toast.success(response.data.message);\n      })\n      .catch((error) => {\n        console.log(\"PRODUCT CREATE ERROR\", error.response.data);\n        setProductsFormData({ ...productsFormData });\n        toast.error(error.response.data.error);\n      });\n  };\n\n  const changePriority = (event) => {\n    setTaskPriority(event.target.value);\n    setTaskFormData({ ...taskFormData, priority: event.target.value });\n  };\n\n  const changeAssignedTo = (event) => {\n    setTaskFormData({ ...taskFormData, assignedTo: event.target.value });\n  };\n\n  const handleTaskSubmit = (event) => {\n    event.preventDefault();\n    setTaskFormData({ ...taskFormData, name: taskName });\n    // axios to connect with backend\n    axios({\n      method: \"POST\",\n      url: `${process.env.REACT_APP_API}/tasks`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      data: { taskName, assignedTo, priority },\n    })\n      .then((response) => {\n        setTaskFormData({\n          ...taskFormData,\n          taskName: \"\",\n          assignedTo: \"\",\n          priority: \"\",\n        });\n        toast.success(response.data.message);\n      })\n      .catch((error) => {\n        console.log(\"TASK CREATE ERROR\", error.response.data);\n        setTaskFormData({ ...taskFormData });\n        toast.error(error.response.data.error);\n      });\n  };\n\n  /* // uploading image file\n  const uploadFileHandler = async (event) => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_API}/upload`,\n        formData,\n        config\n      );\n      setRecipeCreatorData({ ...recipeCreatorData, image: data });\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  }; */\n\n  // fetching users on load\n  const fetchUsers = async () => {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API}/users/names`\n    );\n    //console.log(response);\n    if (response) {\n      setUsers(response.data);\n      setIsFetchingProducts(false);\n    } else {\n      console.log(\"something went wrong when fetching users...\");\n    }\n  };\n  // fetching products on load\n  const fetchProducts = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API}/products`);\n    //console.log(response);\n    if (response) {\n      setProducts(response.data);\n    } else {\n      console.log(\"something went wrong when fetching products...\");\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n    fetchProducts();\n    return () => {\n      setUsers([]);\n      setProducts([]);\n    };\n  }, []);\n\n  return (\n    <>\n      {isAuth() && isAuth().role === \"admin\" && (\n        <Row>\n          <Col>\n            <HomeScreenAdminNavigation />\n          </Col>\n        </Row>\n      )}\n      <Row>\n        <ToastContainer />\n        <Col>\n          <h1 className=\"text-center my-3\">Stock and Task Management</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"my-3\" md={6} sm={12} xl={6}>\n          <h2 className=\"my-3\">Pantry Management</h2>\n          <Form onSubmit={handleProductSubmit}>\n            <Form.Group controlId=\"Name\">\n              <Form.Label>Product Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Product Name\"\n                onChange={handleProductInputChange(\"name\")}\n                value={name}\n                required\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"quantity\">\n              <Form.Label>Quantity</Form.Label>\n              <Form.Control\n                type=\"number\"\n                step=\"0.01\"\n                placeholder=\"Quantity\"\n                onChange={handleProductInputChange(\"countInStock\")}\n                value={countInStock}\n                required\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                step=\"0.01\"\n                placeholder=\"Price\"\n                onChange={handleProductInputChange(\"price\")}\n                value={price}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"weight\">\n              <Form.Label>Weight</Form.Label>\n              <Form.Control\n                type=\"number\"\n                step=\"0.01\"\n                placeholder=\"Weight\"\n                onChange={handleProductInputChange(\"defaultWeightInGrams\")}\n                value={defaultWeightInGrams}\n                required\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"success\">\n              Add Product\n            </Button>\n          </Form>\n        </Col>\n        <Col className=\"my-3\" md={6} sm={12} xl={6}>\n          <h2 className=\"my-3\">Tasks Assignement</h2>\n          <Form onSubmit={handleTaskSubmit}>\n            <Form.Group controlId=\"Name\">\n              <Form.Label>Job to do</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Task Name\"\n                onChange={handleTaskInputChange(\"taskName\")}\n                value={taskName}\n                required\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"priority\">\n              <Form.Label>Priority</Form.Label>\n\n              <Form.Control\n                as=\"select\"\n                onChange={changePriority}\n                value={priority}\n                className={`bg-${setPriorityColour(priority)} text-light`}\n              >\n                <option className=\"bg-info\" value=\"low\">\n                  Low\n                </option>\n                <option className=\"bg-warning\" value=\"medium\">\n                  Medium\n                </option>\n                <option className=\"bg-danger\" value=\"high\">\n                  High\n                </option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"assignedTo\">\n              <Form.Label>Assign Task to:</Form.Label>\n              <Form.Control as=\"select\" onChange={changeAssignedTo} required>\n                <option>Select user</option>\n                {users.length !== 0 ? (\n                  users.map((user) => (\n                    <option key={user._id} value={user._id}>\n                      {user.name}\n                    </option>\n                  ))\n                ) : (\n                  <option className=\"bg-danger text-light\">\n                    Error fetching users\n                  </option>\n                )}\n              </Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"warning\">\n              Add Task\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default AdminScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Table, Spinner, Button, Form, Modal } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// components\nimport HomeScreenAdminNavigation from \"../components/HomeScreenAdminNavigation\";\n\n// helper methods\nimport { getCookie, isAuth } from \"../utilities/authUtilities\";\n\nconst AdminUsersScreen = () => {\n  // state with useState hook\n  const [users, setUsers] = useState([]);\n  const [isFetchingUsers, setIsFetchingUsers] = useState(true);\n  // Modal for removing user confirmation\n  const [modalData, setModalData] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [submitRemove, setSubmitRemove] = useState(false);\n  const [submitEditRole, setSubmitEditRole] = useState(false);\n\n  const handleCloseRemoveModal = () => setShowRemoveModal(false);\n  const handleCloseEditModal = () => setShowEditModal(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShowRemoveModal = (id) => {\n    setModalData(() => users.find((user) => user._id === id));\n    setShowRemoveModal(true);\n    setSubmitRemove(false);\n    console.log(id);\n  };\n  const handleShowEditModal = (id) => {\n    setModalData(() => users.find((user) => user._id === id));\n    setShowEditModal(true);\n    setSubmitEditRole(false);\n    console.log(id);\n  };\n\n  // delete user function\n  const handleDeleteUser = (e) => {\n    const { _id, name } = modalData;\n    e.preventDefault();\n    axios({\n      method: \"DELETE\",\n      url: `${process.env.REACT_APP_API}/users/${modalData._id}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      data: { _id },\n    }).then((response) => {\n      toast.success(`User ${name} has been deleted`);\n      setUsers(users.filter((user) => user._id !== _id));\n      setSubmitRemove(true);\n    });\n\n    //closing modal\n    handleCloseRemoveModal();\n    console.log(`user: ${_id} has been deleted`);\n  };\n\n  // edit user role form submit\n  const handleEditUserRoleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"role changed\");\n    const { _id, role } = modalData;\n    axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API}/users/admin/${_id}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      data: { role },\n    }).then((response) => {\n      toast.success(`User Role has been updated`);\n      setSubmitEditRole(true);\n      handleCloseEditModal();\n    });\n  };\n\n  // edit user role change handler\n  const handleEditRoleChange = (event) => {\n    const value = event.target.value;\n    // getting existing state and update the key with same name as function argument\n    setModalData({ ...modalData, role: value });\n    console.log(modalData);\n  };\n\n  // fetching users on load\n  const fetchUsers = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API}/users/`);\n    //console.log(response);\n    if (response) {\n      setUsers(response.data);\n      setIsFetchingUsers(false);\n    } else {\n      console.log(\"something went wrong when fetching users...\");\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n    return () => {\n      setUsers([]);\n    };\n  }, []);\n\n  useEffect(() => {\n    fetchUsers();\n    return () => {\n      setUsers([]);\n    };\n  }, [submitRemove, submitEditRole]);\n\n  return (\n    <>\n      {isAuth() && isAuth().role === \"admin\" && (\n        <Row>\n          <Col>\n            <HomeScreenAdminNavigation />\n          </Col>\n        </Row>\n      )}\n      <Row>\n        <ToastContainer />\n        <Col>\n          <h1 className=\"text-center my-3\">Users Management</h1>\n        </Col>\n      </Row>\n      <Row>\n        {isFetchingUsers ? (\n          <Spinner />\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>No</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Added</th>\n                <th>Admin</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user, i) => (\n                <tr key={user._id}>\n                  <td>{i + 1}</td>\n                  <td>{user.name}</td>\n                  <td>\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\n                  </td>\n                  <td>{user.createdAt}</td>\n                  <td className=\"text-center\">\n                    {user.role === \"admin\" ? (\n                      <i className=\"fas fa-check text-success\"></i>\n                    ) : (\n                      <i className=\"fas fa-times text-danger\"></i>\n                    )}\n                  </td>\n                  <td className=\"text-right\">\n                    <Button\n                      variant=\"light\"\n                      className=\"btn-sm\"\n                      onClick={() => handleShowEditModal(user._id)}\n                    >\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => handleShowRemoveModal(user._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Row>\n      {/* Remove User Modal */}\n      <Modal show={showRemoveModal} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Please Confirm</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleDeleteUser}>\n          <Modal.Body>\n            <h3>\n              Account delete for{\" \"}\n              <span className=\"text-danger\">{modalData.name}</span>\n            </h3>\n            <Form.Group>\n              <Form.Control\n                type=\"email\"\n                placeholder={modalData.email}\n                name={modalData.email}\n                readOnly\n              />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"warning\" onClick={handleCloseRemoveModal}>\n              Cancel\n            </Button>\n            <Button variant=\"danger\" type=\"submit\">\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n      {/* Edit User Privileges */}\n      <Modal show={showEditModal} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Please Confirm</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleEditUserRoleSubmit}>\n          <Modal.Body>\n            <h3>\n              Privileges change for user:{\" \"}\n              <span className=\"text-danger\">{modalData.name}</span>\n            </h3>\n            <Form.Group>\n              <Form.Control\n                type=\"email\"\n                placeholder={modalData.email}\n                name={modalData.email}\n                readOnly\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Check\n                type=\"radio\"\n                label=\"user\"\n                name=\"userRoleRadio\"\n                id=\"formHorizontalRadios1\"\n                value=\"user\"\n                onChange={handleEditRoleChange}\n                checked={modalData.role === \"user\"}\n              />\n              <Form.Check\n                type=\"radio\"\n                label=\"admin\"\n                value=\"admin\"\n                name=\"userRoleRadio\"\n                id=\"formHorizontalRadios2\"\n                onChange={handleEditRoleChange}\n                checked={modalData.role === \"admin\"}\n              />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"warning\" onClick={handleCloseEditModal}>\n              Cancel\n            </Button>\n            <Button variant=\"success\" type=\"submit\">\n              Change Role\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default AdminUsersScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nmoment.locale(\"en-gb\");\n\nconst RotaCreatorComponent = ({ users, setNewRotaAdded }) => {\n  const [week, setWeek] = useState([\n    { dayId: \"\", day: \"\", date: \"\", employees: [] },\n  ]);\n  const [newWeeklyRota, setNewWeeklyRota] = useState([\n    { weeklyRota: [{ dayId: \"\", day: \"\", date: \"\", employees: [] }] },\n  ]);\n\n  const [rotaIsReady, setRotaIsReady] = useState(false);\n  const { weeklyRota, dayId, day, date, employees } = newWeeklyRota;\n\n  const handleWeekEndingDate = (e) => {\n    let weekStartingDate = e.target.value;\n    let weekDays = [\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n      \"Sunday\",\n    ];\n\n    let newWeek = [];\n\n    for (let i = 0; i <= 6; i++) {\n      let day = {};\n      day.dayId = i;\n      day.day = weekDays[i];\n      day.date = moment(weekStartingDate).add(i, \"days\").format(\"LLLL\");\n      day.employees = [{ nameId: \"\", start: \"\", finish: \"\" }];\n      newWeek.push(day);\n      //console.log(newWeek);\n    }\n\n    setWeek(newWeek);\n  };\n\n  const handleResetWeek = () => {\n    setWeek([{ dayId: \"\", day: \"\", date: \"\", employees: [] }]);\n  };\n\n  const handleChangeEmployees = (e, index, idx) => {\n    const { name, value } = e.target;\n    const employeesArr = [...week];\n\n    employeesArr[index].employees[idx][name] = value;\n    setWeek(employeesArr);\n  };\n\n  // adding new employee input to the specific day\n  const handleAddEmployee = (index) => {\n    const employeesArr = [...week];\n    employeesArr[index].employees.push({ nameId: \"\", start: \"\", finish: \"\" });\n    setWeek(employeesArr);\n  };\n\n  // removing employee input from the specific day\n  const handleRemoveEmployee = (index, empIndex) => {\n    const employeesArr = [...week];\n    employeesArr[index].employees.splice(empIndex, 1);\n    setWeek(employeesArr);\n  };\n\n  // saving the rota\n  const handleRotaSubmit = (e) => {\n    e.preventDefault();\n    let newRota = { weeklyRota: [] };\n    newRota.weeklyRota = [...week];\n    console.log(\"weekly rota saved\");\n    setNewWeeklyRota(newRota);\n    setRotaIsReady(true);\n  };\n\n  const submitNewRota = () => {\n    axios({\n      method: \"POST\",\n      url: `${process.env.REACT_APP_API}/rota`,\n      data: { weeklyRota, dayId, day, date, employees },\n    })\n      .then((response) => {\n        handleResetWeek();\n        toast.success(\"New Rota Created\");\n        setRotaIsReady(false);\n      })\n      .catch((error) => {\n        /* console.log(\"ROTA CREATE ERROR\", error.response.data); */\n        setWeek({ ...week });\n        /* toast.error(error.response.data.error); */\n      });\n  };\n\n  useEffect(() => {\n    if (rotaIsReady) {\n      submitNewRota();\n    }\n  }, [rotaIsReady]);\n  return (\n    <Form onSubmit={handleRotaSubmit}>\n      <ToastContainer />\n      <Form.Row className=\"d-flex justify-content-between\">\n        <Form.Group as={Col}>\n          <Form.Label>Week Start</Form.Label>\n          <Form.Control\n            type=\"date\"\n            onChange={handleWeekEndingDate}\n            disabled={week.length > 1 && true}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>&nbsp;</Form.Label>\n          <Button\n            variant=\"danger\"\n            block\n            onClick={handleResetWeek}\n            disabled={week.length === 1 && true}\n          >\n            Reset\n          </Button>\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>&nbsp;</Form.Label>\n          <Button\n            variant=\"success\"\n            block\n            type=\"submit\"\n            disabled={week.length < 2 && true}\n          >\n            Save\n          </Button>\n        </Form.Group>\n      </Form.Row>\n\n      {week.length > 1 ? (\n        week.map((day, i) => (\n          <React.Fragment key={i}>\n            <Form.Row key={i}>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  placeholder={day.date}\n                  name={day.day}\n                  defaultValue={day.date}\n                  className={\n                    i > 5 ? \"bg-danger text-light\" : \"bg-info text-light\"\n                  }\n                />\n              </Form.Group>\n            </Form.Row>\n            {day.employees.map((emp, i) => (\n              <Form.Row key={i}>\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    onChange={(e) => handleChangeEmployees(e, day.dayId, i)}\n                    name=\"nameId\"\n                    required\n                  >\n                    <option value=\"\">Select Employee</option>\n                    {users.length !== 0 ? (\n                      users.map((user) => (\n                        <option key={user._id} value={user._id}>\n                          {user.name}\n                        </option>\n                      ))\n                    ) : (\n                      <option className=\"bg-danger text-light\">\n                        Error fetching users\n                      </option>\n                    )}\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    onChange={(e) => handleChangeEmployees(e, day.dayId, i)}\n                    placeholder=\"start hh:mm\"\n                    name=\"start\"\n                    pattern=\"^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\n                    title=\"HH:MM 24-hrs format\"\n                    value={emp.start}\n                    required\n                  ></Form.Control>\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please use valid HH:MM 24-hrs format.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"finish\"\n                    pattern=\"^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\n                    title=\"HH:MM 24-hrs format\"\n                    placeholder=\"finish hh:mm\"\n                    value={emp.finish}\n                    onChange={(e) => handleChangeEmployees(e, day.dayId, i)}\n                    required\n                  ></Form.Control>\n                </Form.Group>\n                <Form.Group>\n                  {day.employees.length - 1 === i && (\n                    <Button\n                      className=\"mx-1\"\n                      block\n                      disabled={\n                        emp.nameId.length === 0 ||\n                        emp.start.length === 0 ||\n                        emp.finish.length === 0\n                          ? true\n                          : false\n                      }\n                      onClick={() => handleAddEmployee(day.dayId)}\n                      variant=\"success\"\n                    >\n                      <i className=\"fas fa-plus\"></i>\n                    </Button>\n                  )}\n                </Form.Group>\n                <Form.Group>\n                  <Button\n                    className=\"mx-1\"\n                    block\n                    disabled={day.employees.length === 1 ? true : false}\n                    onClick={() => handleRemoveEmployee(day.dayId, i)}\n                    variant=\"danger\"\n                  >\n                    <i className=\"fas fa-minus\"></i>\n                  </Button>\n                </Form.Group>\n              </Form.Row>\n            ))}\n          </React.Fragment>\n        ))\n      ) : (\n        <p className=\"text-danger\">Please set week begining</p>\n      )}\n    </Form>\n  );\n};\n\nexport default RotaCreatorComponent;\n","import React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst AllRotasTableComponent = ({ rotas, handleShowRemoveModal }) => {\n  return (\n    <Table striped bordered hover responsive className=\"table-sm\">\n      <thead>\n        <tr>\n          <th>No</th>\n          <th>Rota for week starting</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {rotas.map((rota, i) => (\n          <tr key={rota._id}>\n            <td>{i + 1}</td>\n            <td>{rota.weekStart}</td>\n            <td className=\"text-right\">\n              <LinkContainer to={`/rota/${rota._id}/edit`}>\n                <Button variant=\"dark\" className=\"btn-sm mx-2\">\n                  <i className=\"fas fa-edit\"></i>\n                </Button>\n              </LinkContainer>\n              <Button\n                variant=\"danger\"\n                className=\"btn-sm\"\n                onClick={() => handleShowRemoveModal(rota._id)}\n              >\n                <i className=\"fas fa-trash\"></i>\n              </Button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default AllRotasTableComponent;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Modal, Spinner, Button, Form } from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// components\nimport RotaCreatorComponent from \"../components/RotaCreatorComponentTwo\";\nimport AllRotasTableComponent from \"../components/AllRotasTableComponent\";\nimport HomeScreenAdminNavigation from \"../components/HomeScreenAdminNavigation\";\n\n// helper methods\nimport { getCookie, isAuth } from \"../utilities/authUtilities\";\n\nconst AdminRotaCreatorScreen = () => {\n  // state with useState hook\n  const [rotas, setRotas] = useState([]);\n  const [isFetchingRotas, setIsFetchingRotas] = useState(true);\n  const [newRotaAdded, setNewRotaAdded] = useState(false);\n\n  const [users, setUsers] = useState([]);\n  const [isFetchingUsers, setIsFetchingUsers] = useState(true);\n\n  const [modalData, setModalData] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [submitRemove, setSubmitRemove] = useState(false);\n\n  const handleCloseRemoveModal = () => setShowRemoveModal(false);\n  const handleClose = () => setShow(false);\n\n  const handleShowRemoveModal = (id) => {\n    setModalData(() => rotas.find((rota) => rota._id === id));\n    setShowRemoveModal(true);\n    setSubmitRemove(false);\n    console.log(id);\n  };\n\n  // fetching users on load\n  const fetchUsers = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API}/users/`);\n    //console.log(response);\n    if (response) {\n      setUsers(response.data);\n      setIsFetchingUsers(false);\n    } else {\n      console.log(\"something went wrong when fetching users...\");\n    }\n  };\n\n  // delete rota function\n  const handleDeleteRota = (e) => {\n    const { _id } = modalData;\n    e.preventDefault();\n    axios({\n      method: \"DELETE\",\n      url: `${process.env.REACT_APP_API}/rota/${modalData._id}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      data: { _id },\n    }).then((response) => {\n      toast.success(`Rota has been deleted`);\n      setUsers(users.filter((user) => user._id !== _id));\n      setSubmitRemove(true);\n    });\n    //closing modal\n    handleCloseRemoveModal();\n  };\n\n  // fetching rotas on load\n  const fetchRotas = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API}/rota`);\n    //console.log(response);\n    if (response) {\n      setRotas(response.data);\n      setIsFetchingRotas(false);\n    } else {\n      console.log(\"something went wrong when fetching rota...\");\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n\n    return () => {\n      setUsers([]);\n      setRotas([]);\n    };\n  }, []);\n\n  useEffect(() => {\n    fetchRotas();\n    console.log(\"submit Remove changed\");\n  }, [submitRemove, setNewRotaAdded]);\n\n  return (\n    <>\n      {isAuth() && isAuth().role === \"admin\" && (\n        <Row>\n          <Col>\n            <HomeScreenAdminNavigation />\n          </Col>\n        </Row>\n      )}\n      <Row>\n        <ToastContainer />\n        <Col>\n          <h1 className=\"text-center my-3\">Staff Rota Management</h1>\n        </Col>\n      </Row>\n      <Row>\n        <h2 className=\"text-center my-3\">All Rotas</h2>\n        {isFetchingRotas ? (\n          <Spinner />\n        ) : (\n          <AllRotasTableComponent\n            rotas={rotas}\n            handleShowRemoveModal={handleShowRemoveModal}\n          />\n        )}\n      </Row>\n      <Row>\n        <h2 className=\"text-center my-3\">Rota Creator</h2>\n      </Row>\n      {isFetchingUsers ? (\n        <Spinner />\n      ) : (\n        <Row>\n          <RotaCreatorComponent\n            users={users}\n            setNewRottaAdded={setNewRotaAdded}\n          />\n        </Row>\n      )}\n      {/* Remove Rota Modal */}\n      <Modal show={showRemoveModal} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Please Confirm</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleDeleteRota}>\n          <Modal.Body>\n            <h3>\n              Rota removal for week starting{\" \"}\n              <span className=\"text-danger\">{modalData.weekStart}</span>\n            </h3>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"warning\" onClick={handleCloseRemoveModal}>\n              Cancel\n            </Button>\n            <Button variant=\"danger\" type=\"submit\">\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default AdminRotaCreatorScreen;\n","import React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst AllRecipesTableComponent = ({\n  recipes,\n  handleShowRemoveModal,\n  handleClickUpdate,\n  handleClickBookmark,\n}) => {\n  return (\n    <Table striped bordered hover responsive className=\"table-sm\">\n      <thead>\n        <tr>\n          <th>No</th>\n          <th>Recipe</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {recipes.map((recipe, i) => (\n          <tr key={recipe._id}>\n            <td>{i + 1}</td>\n            <td>{recipe.label}</td>\n            <td className=\"text-right\">\n              <Button\n                variant=\"dartk\"\n                className=\"btn-sm mx-2\"\n                onClick={() => handleClickBookmark(recipe._id)}\n              >\n                {!recipe.bookmarked ? (\n                  <i class=\"far fa-heart text-info\"></i>\n                ) : (\n                  <i class=\"fas fa-heart text-danger\"></i>\n                )}\n              </Button>\n              <Button\n                variant=\"warning\"\n                className=\"btn-sm mx-2\"\n                onClick={() => handleClickUpdate(recipe._id)}\n              >\n                <i className=\"fas fa-edit\"></i>\n              </Button>\n              <Button\n                variant=\"danger\"\n                className=\"btn-sm\"\n                onClick={() => handleShowRemoveModal(recipe._id)}\n              >\n                <i className=\"fas fa-trash\"></i>\n              </Button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default AllRecipesTableComponent;\n","import React from \"react\";\nimport {\n  Form,\n  Button,\n  Col,\n  Spinner,\n  Row,\n  Container,\n  Image,\n  Badge,\n} from \"react-bootstrap\";\n\nconst RecipeCreatorComponent = ({\n  handleRecipeSubmit,\n  handleRecipeCreatorInputChange,\n  recipeCreatorData,\n  handleChangeProductNew,\n  products,\n  handleAddIngredientNew,\n  uploadFileHandler,\n  uploading,\n  recipeLines,\n  handleIngredientLineChangeNew,\n  handleRemoveIngredient,\n  handlePhotoInputChange,\n  photoInput,\n  selectedPhoto,\n  previewSource,\n  deleteRecipePhoto,\n  isUpdatingRecipe,\n  handleRecipeUpdateSubmit,\n}) => {\n  const { label, healthLabels, image, ingredientLines, ingredients } =\n    recipeCreatorData;\n  // geting product name for display during edit mode\n\n  const getProductName = (productId) => {\n    let name = \"Choose Product\";\n\n    if (!productId) return name;\n\n    if (products) {\n      const productName = products.filter(\n        (product) => product._id === productId\n      );\n      let name = productName[0].name;\n      console.log(name);\n      return name;\n    }\n\n    const checkIfImageUploadedByUser = (path) =>\n      path.contains(\"https://res.cloudinary.com/uws-student/image/upload/\")\n        ? true\n        : false;\n  };\n\n  return (\n    <Form\n      onSubmit={\n        !isUpdatingRecipe ? handleRecipeSubmit : handleRecipeUpdateSubmit\n      }\n      className=\"p-3\"\n      style={{ backgroundColor: \"#F2F2F2\" }}\n    >\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"label\">\n          <Form.Label>Dish Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={handleRecipeCreatorInputChange(\"label\")}\n            placeholder=\"Dish Name\"\n            name=\"label\"\n            value={label}\n            required\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"healthLabels\">\n          <Form.Label>Health Labels</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Health labels, separated with comma ','\"\n            onChange={handleRecipeCreatorInputChange(\"healthLabels\")}\n            name=\"healthLabels\"\n            value={healthLabels}\n          ></Form.Control>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Col xs=\"auto\">\n          <Form.Group controlId=\"image\">\n            <Form.Label>Paste Image URL</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Please paste url for image file\"\n              onChange={handleRecipeCreatorInputChange(\"image\")}\n              name=\"image\"\n              value={image}\n            ></Form.Control>\n          </Form.Group>\n        </Col>\n        <Col xs=\"auto\">\n          <Form.Group controlId=\"photo\">\n            <Form.Label>Photo Upload</Form.Label>\n            <Form.File\n              id=\"image-file\"\n              label=\"Choose File\"\n              type=\"file\"\n              custom\n              onChange={handlePhotoInputChange}\n              name=\"image\"\n              value={photoInput}\n            ></Form.File>\n            {uploading && <Spinner />}\n          </Form.Group>\n        </Col>\n\n        <Col xs=\"auto\">\n          <Image\n            src={previewSource ? `${previewSource}` : image}\n            thumbnail\n            style={{ height: \"125px\", width: \"125px\" }}\n          />\n          {previewSource || isUpdatingRecipe ? (\n            <Badge\n              className=\"img-upload-delete-badge p-1\"\n              pill\n              variant=\"danger\"\n              onClick={deleteRecipePhoto}\n            >\n              <i className=\"fas fa-trash\"></i>\n            </Badge>\n          ) : null}\n        </Col>\n      </Form.Row>\n      <Container className=\"bg-light p-3 align-items-center my-3 border border-info rounded\">\n        {recipeCreatorData.ingredients.map((line, i) => (\n          <Form.Row key={i}>\n            <Form.Group as={Col}>\n              <Form.Control\n                type=\"text\"\n                value={line.text}\n                onChange={(e) => handleIngredientLineChangeNew(e, i)}\n                name=\"text\"\n                required\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"product\">\n              <Form.Control\n                as=\"select\"\n                onChange={(e) => handleChangeProductNew(e, i)}\n              >\n                {isUpdatingRecipe && products.length !== 0 ? (\n                  <option value={line.productId}>\n                    {getProductName(line.productId)}\n                  </option>\n                ) : (\n                  <option>Choose Product:</option>\n                )}\n\n                {products.length !== 0 ? (\n                  products.map((product) => (\n                    <option key={product._id} value={product._id}>\n                      {product.name}\n                    </option>\n                  ))\n                ) : (\n                  <option className=\"bg-danger text-light\">\n                    Error fetching products\n                  </option>\n                )}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"number\"\n                name=\"weight\"\n                onChange={(e) => handleIngredientLineChangeNew(e, i)}\n                value={line.weight}\n                required\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Button\n                variant=\"dark\"\n                className=\"mx-1\"\n                disabled={\n                  line.text.length == 0 ||\n                  line.weight == null ||\n                  line.productId == undefined\n                    ? true\n                    : false\n                }\n                onClick={handleAddIngredientNew}\n              >\n                <i className=\"fas fa-plus\"></i>\n              </Button>\n            </Form.Group>\n            <Form.Group>\n              <Button\n                className=\"mx-1\"\n                disabled={\n                  recipeCreatorData.ingredients.length === 1 ? true : false\n                }\n                onClick={() => handleRemoveIngredient(i)}\n                variant=\"danger\"\n              >\n                <i className=\"fas fa-minus\"></i>\n              </Button>\n            </Form.Group>\n          </Form.Row>\n        ))}\n        <hr />\n        {isUpdatingRecipe ? (\n          <Button variant=\"warning\" type=\"submit\" className=\"m-2\">\n            Update Recipe\n          </Button>\n        ) : (\n          <Button variant=\"success\" type=\"submit\" className=\"m-2\">\n            Add Recipe\n          </Button>\n        )}\n      </Container>\n    </Form>\n  );\n};\n\nexport default RecipeCreatorComponent;\n","import React from \"react\";\r\nimport { Card, Button, ListGroup } from \"react-bootstrap\";\r\n\r\nfunction EdamamRecipesComponent({ edamamRecipes }) {\r\n  return (\r\n    <>\r\n      {edamamRecipes.map((recipe) => (\r\n        <Card style={{ width: \"18rem\" }} className=\"m-1\">\r\n          <Card.Img variant=\"top\" src={recipe.recipe.image} fluid />\r\n          <Card.Body>\r\n            <Card.Title>{recipe.recipe.label}</Card.Title>\r\n            <ListGroup variant=\"flush\">\r\n              {recipe.recipe.ingredientLines.map((line) => (\r\n                <ListGroup.Item>{line}</ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EdamamRecipesComponent;\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Row,\n  Col,\n  Modal,\n  Spinner,\n  Button,\n  Form,\n  Container,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// import components\nimport AllRecipesTableComponent from \"../components/AllRecipesTableComponent\";\nimport RecipeCreatorComponent from \"../components/RecipeCreatorComponentThree\";\nimport EdamamRecipesComponent from \"../components/EdamamRecipesComponent\";\nimport HomeScreenAdminNavigation from \"../components/HomeScreenAdminNavigation\";\n\n// import helper methods\nimport { getCookie, isAuth } from \"../utilities/authUtilities\";\n\nconst AdminRecipeCreatorScreen = () => {\n  // state with useState hook\n  const [recipes, setRecipes] = useState([]);\n  const [isFetchingRecipes, setIsFetchingRecipes] = useState(true);\n  const [newRecipeAdded, setNewRecipeAdded] = useState(false);\n\n  const [products, setProducts] = useState([]);\n  const [isFetchingProducts, setIsFetchingProducts] = useState(true);\n\n  const [modalData, setModalData] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [submitRemove, setSubmitRemove] = useState(false);\n\n  const [bookmarkUpdated, setBookmarkUpdated] = useState(false);\n\n  const handleCloseRemoveModal = () => setShowRemoveModal(false);\n  const handleClose = () => setShow(false);\n\n  // Recipe starting empty state\n  const [recipeCreatorData, setRecipeCreatorData] = useState({\n    label: \"\",\n    healthLabels: [],\n    image: \"https://dummyimage.com/125x125/ccc/000\",\n    ingredientLines: [],\n    ingredients: [\n      {\n        productId: \"\",\n        text: \"\",\n        weight: null,\n      },\n    ],\n  });\n\n  // Recipe's ingredient lines array state\n  const [recipeLines, setRecipeLines] = useState([\n    {\n      productId: \"\",\n      text: \"\",\n      weight: null,\n    },\n  ]);\n\n  // Uploading photo state\n  const [uploading, setUploading] = useState(false);\n\n  // Destructuring recipe's state\n  const { label, healthLabels, image, ingredients } = recipeCreatorData;\n\n  // Displaying Modal Screen to delete recipe\n  const handleShowRemoveModal = (id) => {\n    setModalData(() => recipes.find((recipe) => recipe._id === id));\n    setShowRemoveModal(true);\n    setSubmitRemove(false);\n    console.log(id);\n  };\n\n  // fetching products on load\n  const fetchProducts = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API}/products`);\n    // console.log(response);\n    if (response) {\n      setIsFetchingProducts(false);\n      setProducts(response.data);\n    } else {\n      console.log(\"something went wrong when fetching products...\");\n    }\n  };\n\n  // fetching recipes on load\n  const fetchRecipes = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API}/recipes`);\n    //console.log(response);\n    if (response) {\n      setRecipes(response.data);\n      setIsFetchingRecipes(false);\n    } else {\n      console.log(\"something went wrong when fetching recipes...\");\n    }\n  };\n\n  // Fetching products on load and storing them in the state for use in the recipe creator\n  useEffect(() => {\n    setBookmarkUpdated(false);\n    fetchProducts();\n    return () => {\n      setProducts([]);\n    };\n  }, []);\n\n  // Fetching all recipes on first page load, after delete and after update\n  useEffect(() => {\n    setBookmarkUpdated(false);\n    fetchRecipes();\n  }, [submitRemove, setNewRecipeAdded, bookmarkUpdated]);\n\n  // *** handling recipe creator ***\n  // submiting completed recipe to database\n  const handleRecipeSubmit = (e) => {\n    console.log(\"clicked add recipe\");\n    e.preventDefault();\n    // axios to connect with backend\n    axios({\n      method: \"POST\",\n      url: `${process.env.REACT_APP_API}/recipes`,\n      data: { label, healthLabels, image, ingredients },\n    })\n      .then((response) => {\n        setRecipeCreatorData({\n          ...recipeCreatorData,\n          label: \"\",\n          healthLabels: [],\n          image: \"https://dummyimage.com/125x125/ccc/000\",\n          ingredients: [],\n        });\n        setRecipeLines([\n          {\n            productId: \"\",\n            text: \"\",\n            weight: null,\n          },\n        ]);\n        setPreviewSource(\"\");\n        toast.success(response.data.message);\n      })\n      .catch((error) => {\n        console.log(\"RECIPE CREATE ERROR\", error.response.data);\n        setRecipeCreatorData({ ...recipeCreatorData });\n        toast.error(error.response.data.error);\n      });\n    console.log(recipeCreatorData);\n    console.log(\"Recipe submitted\");\n  };\n\n  // handling Recipe Inputs name, healthLabels, image link\n  const handleRecipeCreatorInputChange = (name) => (event) => {\n    // getting existing state and update the key with same name as function argument\n    if (name === \"healthLabels\") {\n      let healthLabArr = event.target.value.split(\",\");\n      setRecipeCreatorData({\n        ...recipeCreatorData,\n        healthLabels: healthLabArr,\n      });\n    } else {\n      setRecipeCreatorData({\n        ...recipeCreatorData,\n        [name]: event.target.value,\n      });\n    }\n  };\n\n  // uploading image file and store on the server - not used anymore due to change for storage images in the cloudinary service\n  const uploadFileHandler = async (event) => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_API}/upload`,\n        formData,\n        config\n      );\n      setRecipeCreatorData({ ...recipeCreatorData, image: data });\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  // uploading image file to Cloudinary\n  const [photoInput, setPhotoInput] = useState(\"\");\n  const [selectedPhoto, setSelectedPhoto] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n\n  // image file type validation function\n  const isImage = (file) => {\n    return !!file.type.match(\"image.*\");\n  };\n\n  const handlePhotoInputChange = (e) => {\n    const photo = e.target.files[0];\n    // previewing uploaded photo\n    previewPhoto(photo);\n  };\n\n  const previewPhoto = (photo) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(photo);\n\n    // validation by checking file type of uploaded file\n    if (!isImage(photo)) {\n      toast.error(\"Please choose image / photo file\");\n    } else {\n      reader.onloadend = () => {\n        setPreviewSource(reader.result);\n        uploadRecipePhoto(reader.result);\n      };\n    }\n  };\n\n  const uploadRecipePhoto = async (base64EncodedImage) => {\n    //\n    try {\n      const data = await fetch(\n        `${process.env.REACT_APP_API}/upload/cloudinary`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({ data: base64EncodedImage }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const response = await data.json();\n      toast.success(response.msg);\n      console.log(response.imgData);\n\n      setRecipeCreatorData({\n        ...recipeCreatorData,\n        image: response.imgData.secure_url,\n      });\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  // remove photo from Cloudinary\n  const deleteRecipePhoto = async () => {\n    // extracting public id of the photo to delete from the url address stored in the state\n    if (\n      !recipeCreatorData.image.includes(\n        \"https://res.cloudinary.com/uws-student/image/upload/\"\n      )\n    ) {\n      toast.error(\n        \"Image file is just link from internet. Cannot delete that. Please insert new link or upload photo.\"\n      );\n      return;\n    }\n\n    let public_id = recipeCreatorData.image.split(\"/\");\n    public_id = public_id[7].substring(0, 20);\n\n    console.log(public_id);\n    //\n    try {\n      const data = await fetch(\n        `${process.env.REACT_APP_API}/upload/cloudinary/destroy`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ public_id }),\n        }\n      );\n      const response = await data.json();\n      setPreviewSource(\"\");\n      toast.success(response.msg);\n\n      setRecipeCreatorData({\n        ...recipeCreatorData,\n        image: \"https://dummyimage.com/125x125/ccc/000\",\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // ***** TESTING NEW RECIPE CREATOR ****\n\n  const handleIngredientLineChangeNew = (e, i) => {\n    //\n    const { name, value } = e.target;\n    const ingrArray = [...recipeCreatorData.ingredients];\n    ingrArray[i][name] = value;\n    setRecipeCreatorData({ ...recipeCreatorData, ingredients: ingrArray });\n  };\n\n  const handleAddIngredientNew = (i) => {\n    //\n    const recipeCreatorFormIngrArray = [...recipeCreatorData.ingredients];\n    const recipeCreatorTextLines = [...recipeCreatorData.ingredientLines];\n    const recipeTextLine = recipeCreatorData.ingredients.map((x) => x.text);\n    recipeCreatorTextLines.push(recipeTextLine);\n\n    recipeCreatorFormIngrArray.push({ productId: \"\", text: \"\", weight: 0 });\n\n    setRecipeCreatorData({\n      ...recipeCreatorData,\n      ingredientLines: recipeCreatorTextLines,\n      ingredients: recipeCreatorFormIngrArray,\n    });\n  };\n\n  // storing product id in recipeLines state\n  const handleChangeProductNew = (e, i) => {\n    const ingrArray = [...recipeCreatorData.ingredients];\n    ingrArray[i][\"productId\"] = e.target.value;\n\n    setRecipeCreatorData({\n      ...recipeCreatorData,\n      ingredients: ingrArray,\n    });\n  };\n\n  // removing ingredient input from the recipe's creator\n  const handleRemoveIngredient = (index) => {\n    const ingrArray = [...recipeCreatorData.ingredients];\n    ingrArray.splice(index, 1);\n    //console.log(`ingr Array after splice - ${ingrArray}`);\n    setRecipeCreatorData({\n      ...recipeCreatorData,\n      ingredients: ingrArray,\n    });\n  };\n\n  // Bookmarking Recipes\n  const handleClickBookmark = (id) => {\n    //\n    // finding exact recipe by id\n    let bookmarked = recipes.filter((r) => r._id === id);\n    // toggling bookmarke flag true/false or false/true\n    bookmarked = !bookmarked[0].bookmarked;\n\n    // updating it in MongoDB\n    axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API}/recipes/update/bookmark/${id}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      data: { bookmarked },\n    }).then((response) => {\n      toast.success(`Recipe's bookmark has changed `);\n      setBookmarkUpdated(true);\n    });\n  };\n\n  // ***** TESTING NEW RECIPE CREATOR ****\n  //-----------------------------------------------\n  //\n\n  // delete recipe function\n  const handleDeleteRecipe = (e) => {\n    const { _id } = modalData;\n    e.preventDefault();\n    axios({\n      method: \"DELETE\",\n      url: `${process.env.REACT_APP_API}/recipes/${modalData._id}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      data: { _id },\n    }).then((response) => {\n      toast.success(`Recipe has been deleted`);\n      setRecipes(recipes.filter((recipe) => recipe._id !== _id));\n      setSubmitRemove(true);\n    });\n    //closing modal window\n    handleCloseRemoveModal();\n  };\n\n  // RECIPE UPDATE\n  const [isUpdatingRecipe, setIsUpdatingRecipe] = useState(false);\n  const [recipeToUpdateData, setRecipeToUpdateData] = useState(\"\");\n  const [recipeIdToUpdate, setRecipeIdToUpdate] = useState(\"\");\n  // fetching single recipe with id from url\n  const fetchRecipeToUpdate = async (id) => {\n    const { data } = await axios.get(\n      `${process.env.REACT_APP_API}/recipes/update/${id}`\n    );\n    // storing fetched recipe data in the state\n    setRecipeToUpdateData(data);\n\n    // copying that data to recipe creator state to populate it in the form\n    const recipeCreatorFormIngrArray = await [...data.ingredients];\n    setRecipeLines(recipeCreatorFormIngrArray);\n\n    const recipeCreatorDataToUpdate = await {\n      label: data.label,\n      healthLabels: [...data.healthLabels],\n      image: data.image,\n      ingredientLines: [...data.ingredientLines],\n      ingredients: [...data.ingredients],\n    };\n\n    setRecipeCreatorData(recipeCreatorDataToUpdate);\n  };\n  // update recipe after click on it\n  const handleClickUpdate = (id) => {\n    //\n    console.log(id);\n    fetchRecipeToUpdate(id);\n    setIsUpdatingRecipe(true);\n    setRecipeIdToUpdate(id);\n  };\n\n  // submit updated recipe\n  const handleRecipeUpdateSubmit = async (e) => {\n    e.preventDefault();\n    const response = await axios.patch(\n      `${process.env.REACT_APP_API}/recipes/update/${recipeIdToUpdate}`,\n      { label, healthLabels, image, ingredients },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          /* Authorization: `Bearer ${getCookie(\"token\")}`, */\n        },\n      }\n    );\n    if (response) {\n      toast.success(response.data.message);\n      setPreviewSource(\"\");\n      setRecipeCreatorData({\n        label: \"\",\n        healthLabels: [],\n        image: \"https://dummyimage.com/125x125/ccc/000\",\n        ingredientLines: [],\n        ingredients: [\n          {\n            productId: \"\",\n            text: \"\",\n            weight: null,\n          },\n        ],\n      });\n      setIsUpdatingRecipe(false);\n      console.log(\"recipe update submitted\");\n    } else {\n      //console.log(\"RECIPE UPDATE ERROR\", error.response.data);\n      toast.error(response.data.error);\n    }\n  };\n\n  // search EDAMAM Recipes API for recipes\n  // EDAMAM search query\n  // https://api.edamam.com/search?q=pizza&app_id=a1bd6451&app_key=31f1c205b4c0de6c1b021ac04c06efe6&from=0&to=9\n\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [edamamRecipes, setEdamamRecipes] = useState([]);\n  const [edamamRecipesLoaded, setEdamamRecipesLoaded] = useState(false);\n\n  const handleSearchInputChange = (e) => {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  };\n\n  const handleSearchEdamamApi = async () => {\n    const recipeQuery = searchInput;\n    const edamamURL = `https://api.edamam.com/search?q=${recipeQuery}&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_API_KEY}&from=0&to=9`;\n    console.log(`looking for... ${recipeQuery}`);\n    const response = await axios.get(`${edamamURL}`);\n    console.log(response);\n    if (response) {\n      setEdamamRecipes(response.data.hits);\n      setEdamamRecipesLoaded(true);\n    } else {\n      console.log(\n        \"something went wrong with EDAMAM API... Please try again later\"\n      );\n      setEdamamRecipesLoaded(false);\n    }\n  };\n\n  //------------------------\n\n  // realtime recipe creator inputs feedback\n\n  useEffect(() => {}, [\n    isUpdatingRecipe,\n    recipeCreatorData,\n    bookmarkUpdated,\n    edamamRecipesLoaded,\n  ]);\n\n  return (\n    <>\n      <Container>\n        {isAuth() && isAuth().role === \"admin\" && (\n          <Row>\n            <Col>\n              <HomeScreenAdminNavigation />\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <ToastContainer />\n          <Col>\n            <h1 className=\"text-center my-3\">Recipes Management</h1>\n            <h4 className=\"text-center my-2\">\n              <span className=\"text-success\">Create</span>,{\" \"}\n              <span className=\"text-warning\">Edit</span>,{\" \"}\n              <span className=\"text-danger\">Delete</span> or Bookmark recipes\n            </h4>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h2 className=\"text-center my-3 text-info\">All Recipes</h2>\n          </Col>\n        </Row>\n        <Row>\n          {isFetchingRecipes ? (\n            <Spinner />\n          ) : (\n            <AllRecipesTableComponent\n              recipes={recipes}\n              handleShowRemoveModal={handleShowRemoveModal}\n              handleClickUpdate={handleClickUpdate}\n              handleClickBookmark={handleClickBookmark}\n            />\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <h2 className=\"my-3 text-center text-info\">Recipe Creator</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {isFetchingProducts ? (\n              <Spinner />\n            ) : (\n              <RecipeCreatorComponent\n                handleRecipeSubmit={handleRecipeSubmit}\n                handleRecipeCreatorInputChange={handleRecipeCreatorInputChange}\n                recipeCreatorData={recipeCreatorData}\n                products={products}\n                handleChangeProductNew={handleChangeProductNew}\n                handleAddIngredientNew={handleAddIngredientNew}\n                recipeLines={recipeLines}\n                setRecipeLines={setRecipeLines}\n                uploading={uploading}\n                uploadFileHandler={uploadFileHandler}\n                handleIngredientLineChangeNew={handleIngredientLineChangeNew}\n                handleRemoveIngredient={handleRemoveIngredient}\n                handlePhotoInputChange={handlePhotoInputChange}\n                photoInput={photoInput}\n                selectedPhoto={selectedPhoto}\n                previewSource={previewSource}\n                deleteRecipePhoto={deleteRecipePhoto}\n                isUpdatingRecipe={isUpdatingRecipe}\n                handleRecipeUpdateSubmit={handleRecipeUpdateSubmit}\n              />\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h2 className=\"my-3 text-center text-info\">Need an Inspiration?</h2>\n            <h5 className=\"text-success text-center\">\n              Search over 2.5 million recipes...\n            </h5>\n            <h6 className=\"text-warning text-center\">\n              powered by{\" \"}\n              <a href=\"https://www.edamam.com/\" target=\"_blank\">\n                &copy;Edamam's\n              </a>{\" \"}\n              Recipe Search API\n            </h6>\n          </Col>\n        </Row>\n        <Row className=\"my-3\">\n          <Col>\n            <InputGroup className=\"mt-2\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">\n                  <i className=\"fas fa-search\"></i>\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                placeholder=\"Search Internet for recipe or ingredient...\"\n                aria-label=\"Product name\"\n                aria-describedby=\"basic-addon1\"\n                onChange={handleSearchInputChange}\n                className=\"edamam-search-input\"\n                value={searchInput}\n              />\n              {searchInput.length > 0 && (\n                <InputGroup.Append\n                  className=\"edamam-search-reset-icon\"\n                  onClick={() => {\n                    setSearchInput(\"\");\n                    setEdamamRecipesLoaded(false);\n                  }}\n                >\n                  <InputGroup.Text className=\"bg-danger text-light\">\n                    <i class=\"far fa-times-circle\"></i>\n                  </InputGroup.Text>\n                </InputGroup.Append>\n              )}\n              <Button\n                variant=\"warning\"\n                type=\"submit\"\n                className=\"ml-2\"\n                onClick={handleSearchEdamamApi}\n                disabled={searchInput.length === 0 && true}\n              >\n                Search\n              </Button>\n            </InputGroup>\n          </Col>\n        </Row>\n        <hr\n          className=\"my-3 text-info\"\n          style={{ width: \"50%\", height: \"3px\" }}\n        />\n        {edamamRecipesLoaded ? (\n          <Row>\n            <Container className=\"d-flex flex-wrap\">\n              <EdamamRecipesComponent\n                className=\"my-3\"\n                edamamRecipes={edamamRecipes}\n              />\n            </Container>\n          </Row>\n        ) : null}\n\n        {/* {JSON.stringify(searchInput)} */}\n        {/* Remove Recipe Modal */}\n        {\n          <Modal show={showRemoveModal} onHide={handleClose} animation={false}>\n            <Modal.Header closeButton>\n              <Modal.Title>Please Confirm Removal</Modal.Title>\n            </Modal.Header>\n            <Form onSubmit={handleDeleteRecipe}>\n              <Modal.Body>\n                <h3>\n                  Recipe for{\" \"}\n                  <span className=\"text-danger\">{modalData.label}</span>\n                </h3>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"warning\" onClick={handleCloseRemoveModal}>\n                  Cancel\n                </Button>\n                <Button variant=\"danger\" type=\"submit\">\n                  Delete\n                </Button>\n              </Modal.Footer>\n            </Form>\n          </Modal>\n        }\n      </Container>\n    </>\n  );\n};\n\nexport default AdminRecipeCreatorScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, Container, Spinner } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nmoment.locale(\"en-gb\");\n\nconst RotaEditComponent = ({ users, rota, submitEditedRota }) => {\n  const [isRotaChanged, setIsRotaChanged] = useState(false);\n  const [updatedRota, setUpdatedRota] = useState([\n    { weeklyRota: [{ dayId: \"\", day: \"\", date: \"\", employees: [] }] },\n  ]);\n\n  /* const { weeklyRota } = updatedRota; */\n  const [week, setWeek] = useState([\n    { dayId: \"\", day: \"\", date: \"\", employees: [] },\n  ]);\n\n  const handleChangeEmployees = (e, index, idx) => {\n    const { name, value } = e.target;\n    const employeesArr = [...week];\n\n    employeesArr[index].employees[idx][name] = value;\n    setWeek(employeesArr);\n  };\n\n  // adding new employee input to the specific day\n  const handleAddEmployee = (index) => {\n    const employeesArr = [...week];\n    employeesArr[index].employees.push({ nameId: \"\", start: \"\", finish: \"\" });\n    setWeek(employeesArr);\n  };\n\n  // removing employee input from the specific day\n  const handleRemoveEmployee = (index, empIndex) => {\n    const employeesArr = [...week];\n    employeesArr[index].employees.splice(empIndex, 1);\n    setWeek(employeesArr);\n  };\n\n  // saving the rota\n  const handleRotaUpdate = (e) => {\n    e.preventDefault();\n    let newUpdatedRota = { weeklyRota: [] };\n    newUpdatedRota.weeklyRota = [...week];\n    setUpdatedRota(newUpdatedRota);\n    console.log(\"updated rota saved\");\n    setIsRotaChanged(true);\n    toast.success(`Rota has been changed. Please click save now!`);\n  };\n\n  const getUserNames = (id) => {\n    let name = \"Select User\";\n    if (!id) {\n      return name;\n    }\n\n    if (users) {\n      const user = users.filter((user) => user._id === id);\n      name = user[0].name;\n      return name;\n    }\n  };\n\n  useEffect(() => {\n    setWeek(rota.weeklyRota);\n  }, [rota]);\n\n  const saveRotaToDB = () => {\n    if (isRotaChanged) {\n      submitEditedRota(updatedRota);\n    }\n  };\n\n  useEffect(() => {\n    console.log(week);\n    console.log(updatedRota);\n  }, [week, updatedRota]);\n\n  return (\n    <Container>\n      {!week ? (\n        <Spinner />\n      ) : (\n        <Form onSubmit={handleRotaUpdate}>\n          <ToastContainer />\n          <Form.Row className=\"d-flex justify-content-between\">\n            <Form.Group as={Col}>\n              <Form.Label>Week Start</Form.Label>\n              <Form.Control\n                type=\"date\"\n                disabled={week.length > 1 && true}\n                value={moment(rota.weekStart).format(\"YYYY-MM-DD\")}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>&nbsp;</Form.Label>\n              <Button\n                variant=\"warning\"\n                block\n                type=\"submit\"\n                disabled={week.length < 2 && true}\n              >\n                Update Rota\n              </Button>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>&nbsp;</Form.Label>\n              <Button\n                variant=\"success\"\n                block\n                onClick={saveRotaToDB}\n                disabled={week.length < 2 && true}\n              >\n                Save\n              </Button>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>&nbsp;</Form.Label>\n              <LinkContainer to={`/admin/rota`}>\n                <Button variant=\"danger\" block>\n                  Cancel\n                  <i class=\"fas fa-history mx-3\"></i>\n                </Button>\n              </LinkContainer>\n            </Form.Group>\n          </Form.Row>\n\n          {week ? (\n            week.map((day, i) => (\n              <React.Fragment key={i}>\n                <Form.Row key={i}>\n                  <Form.Group>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder={day.date}\n                      name={day.day}\n                      defaultValue={day.date}\n                      className={\n                        i > 5 ? \"bg-danger text-light\" : \"bg-info text-light\"\n                      }\n                    />\n                  </Form.Group>\n                </Form.Row>\n                {day.employees.map((emp, i) => (\n                  <Form.Row key={i}>\n                    <Form.Group>\n                      <Form.Control\n                        as=\"select\"\n                        onChange={(e) => handleChangeEmployees(e, day.dayId, i)}\n                        name=\"nameId\"\n                        required\n                      >\n                        <option>{getUserNames(emp.nameId)}</option>\n                        {users.length !== 0 ? (\n                          users.map((user) => (\n                            <option key={user._id} value={user._id}>\n                              {user.name}\n                            </option>\n                          ))\n                        ) : (\n                          <option className=\"bg-danger text-light\">\n                            Error fetching users\n                          </option>\n                        )}\n                      </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Control\n                        type=\"text\"\n                        onChange={(e) => handleChangeEmployees(e, day.dayId, i)}\n                        placeholder=\"start hh:mm\"\n                        name=\"start\"\n                        pattern=\"^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\n                        title=\"HH:MM 24-hrs format\"\n                        value={emp.start}\n                        required\n                      ></Form.Control>\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please use valid HH:MM 24-hrs format.\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"finish\"\n                        pattern=\"^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\n                        title=\"HH:MM 24-hrs format\"\n                        placeholder=\"finish hh:mm\"\n                        value={emp.finish}\n                        onChange={(e) => handleChangeEmployees(e, day.dayId, i)}\n                        required\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                      {day.employees.length - 1 === i && (\n                        <Button\n                          className=\"mx-1\"\n                          disabled={\n                            emp.nameId.length === 0 ||\n                            emp.start.length === 0 ||\n                            emp.finish.length === 0\n                              ? true\n                              : false\n                          }\n                          onClick={() => handleAddEmployee(day.dayId)}\n                          variant=\"success\"\n                        >\n                          <i class=\"fas fa-user-plus\"></i>\n                        </Button>\n                      )}\n                    </Form.Group>\n                    <Form.Group>\n                      <Button\n                        className=\"mx-1\"\n                        disabled={day.employees.length === 1 ? true : false}\n                        onClick={() => handleRemoveEmployee(day.dayId, i)}\n                        variant=\"danger\"\n                      >\n                        <i class=\"fas fa-user-minus\"></i>\n                      </Button>\n                    </Form.Group>\n                  </Form.Row>\n                ))}\n              </React.Fragment>\n            ))\n          ) : (\n            <p className=\"text-danger\">Fetching rota to edit</p>\n          )}\n        </Form>\n      )}\n    </Container>\n  );\n};\n\nexport default RotaEditComponent;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport RotaEditComponent from \"../components/RotaEditComponent\";\nimport { getCookie } from \"../utilities/authUtilities\";\n\nconst AdminRotaEditScreen = () => {\n  // state with useState hook\n  const [rota, setRota] = useState([]);\n  const [isFetchingRota, setIsFetchingRota] = useState(true);\n\n  const [users, setUsers] = useState([]);\n  const [isFetchingUsers, setIsFetchingUsers] = useState(true);\n\n  const { id } = useParams();\n  const { weekStart } = rota;\n\n  const [editedRotaSubmitted, setEditedRotaSubmitted] = useState(false);\n\n  // fetching users on load\n  const fetchUsers = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API}/users/`);\n    //console.log(response);\n    if (response) {\n      setUsers(response.data);\n      setIsFetchingUsers(false);\n    } else {\n      console.log(\"something went wrong when fetching users...\");\n    }\n  };\n\n  // fetching rota on load\n  const fetchRotaById = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API}/rota/${id}`);\n    //console.log(response);\n    if (response) {\n      setRota(response.data);\n      setIsFetchingRota(false);\n    } else {\n      console.log(\"something went wrong when fetching rota...\");\n    }\n  };\n\n  const submitEditedRota = async (data) => {\n    const { weeklyRota } = data;\n    const response = await axios.patch(\n      `${process.env.REACT_APP_API}/rota/${id}`,\n      { weeklyRota },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`,\n        },\n      }\n    );\n    if (response) {\n      console.log(JSON.stringify(data));\n      toast.success(response.data.message);\n      setEditedRotaSubmitted(true);\n    } else {\n      //console.log(\"ROTA UPDATE ERROR\", error.response.data);\n      toast.error(response.data.error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n    fetchRotaById();\n    return () => {\n      setUsers([]);\n      setRota([]);\n    };\n  }, []);\n\n  useEffect(() => {\n    fetchUsers();\n    fetchRotaById();\n  }, [editedRotaSubmitted]);\n\n  return (\n    <>\n      <Row>\n        <ToastContainer />\n        <Col>\n          <h2 className=\"text-center my-3\">Rota Editor</h2>\n        </Col>\n      </Row>\n      <Row>\n        {isFetchingRota && isFetchingUsers ? (\n          <Spinner />\n        ) : (\n          <>\n            <h3 className=\"my-3\">\n              Edit rota for week starting on:{\" \"}\n              <span className=\"text-success mx-2\">{weekStart}</span>\n            </h3>\n            <RotaEditComponent\n              rota={rota}\n              users={users}\n              RotaId={id}\n              submitEditedRota={submitEditedRota}\n            />\n          </>\n        )}\n      </Row>\n    </>\n  );\n};\n\nexport default AdminRotaEditScreen;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n// importing css file\nimport \"./App.css\";\n\n// layout components\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport ProtectedUserRoute from \"./components/ProtectedUserRoute\";\nimport ProtectedAdminRoute from \"./components/ProtectedAdminRoute\";\n\n// screens\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport RecipesScreen from \"./screens/RecipesScreen\";\nimport RecipeScreen from \"./screens/RecipeScreen\";\nimport RotaScreen from \"./screens/RotaScreen\";\nimport PantryScreen from \"./screens/PantryScreen\";\nimport TasksScreen from \"./screens/TasksScreen\";\nimport ActivateAccountScreen from \"./screens/ActivateAccountScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport AdminScreen from \"./screens/AdminScreen\";\nimport AdminUsersScreen from \"./screens/AdminUsersScreen\";\nimport AdminRotaCreatorScreen from \"./screens/AdminRotaCreatorScreen\";\nimport AdminRecipeCreatorScreen from \"./screens/AdminRecipeCreatorScreen\";\nimport AdminRotaEditScreen from \"./screens/AdminRotaEditScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Container>\n        <main className=\"my-auto\">\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/login\" component={LoginScreen} exact />\n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/recipes\" component={RecipesScreen} exact />\n          <Route path=\"/recipes/:id\" component={RecipeScreen} exact />\n          <Route path=\"/rota\" component={RotaScreen} exact />\n          <Route path=\"/pantry\" component={PantryScreen} exact />\n          <Route path=\"/tasks\" component={TasksScreen} exact />\n          <Route\n            path=\"/auth/activate/:token\"\n            component={ActivateAccountScreen}\n            exact\n          />\n          <ProtectedUserRoute path=\"/profile\" exact component={ProfileScreen} />\n\n          <ProtectedAdminRoute\n            path=\"/admin/users\"\n            exact\n            component={AdminUsersScreen}\n          />\n          <ProtectedAdminRoute\n            path=\"/admin/rota\"\n            exact\n            component={AdminRotaCreatorScreen}\n          />\n          <ProtectedAdminRoute\n            path=\"/admin/recipe\"\n            exact\n            component={AdminRecipeCreatorScreen}\n          />\n          <ProtectedAdminRoute\n            path=\"/rota/:id/edit\"\n            exact\n            component={AdminRotaEditScreen}\n          />\n          <ProtectedAdminRoute path=\"/admin\" exact component={AdminScreen} />\n        </main>\n      </Container>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}